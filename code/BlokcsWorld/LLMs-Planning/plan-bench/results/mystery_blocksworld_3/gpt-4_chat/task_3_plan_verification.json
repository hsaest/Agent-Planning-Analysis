{
    "task": "task_3_plan_verification",
    "prompt_type": "oneshot",
    "domain": "mystery_blocksworld_3",
    "instances": [
        {
            "instance_id": 1,
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Pain object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object a, harmony, planet object a, planet object c, province object b and province object c.\nMy goal is to have that object c craves object a. \nMy plan is as follows:\n\n[PLAN]\nfeast object b from object a\nsuccumb object b\nattack object c\novercome object c from object a\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is valid.\n\n[STATEMENT]\nAs initial conditions I have that, object c craves object a, harmony, planet object a, planet object b, province object b and province object c.\nMy goal is to have that object a craves object b and object b craves object c. \nMy plan is as follows:\n\n[PLAN]\nfeast object c from object a\nsuccumb object c\nattack object b\novercome object b from object c\nattack object a\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid. This is the unmet goal condition:\nobject a craves object b\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, object b craves object a, harmony, planet object c and province object b.\nMy goal is to have that object c craves object a. \nMy plan is as follows:\n\n[PLAN]\novercome object c from object a\nsuccumb object a\nfeast object b from object a\nsuccumb object b\nfeast object a from object c\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid. The following action at step 1 has unmet preconditions:\novercome object c from object a\nThe unmet preconditions are:\npain object c and province object a\n[STATEMENT]\nAs initial conditions I have that, object b craves object a, object c craves object b, harmony, planet object a and province object c.\nMy goal is to have that object a craves object b and object c craves object a. \nMy plan is as follows:\n\n[PLAN]\nfeast object c from object b\nsuccumb object c\nfeast object b from object a\nsuccumb object b\nattack object a\novercome object a from object b\nattack object c\n[PLAN END]\n\n[VERIFICATION]",
            "ground_truth_plan": "The above plan is invalid. This is the unmet goal condition:\nobject c craves object a",
            "llm_raw_response": "The above plan is invalid. This is the unmet goal condition:\nobject c craves object a",
            "extracted_llm_plan": {
                "valid": false,
                "unmet_goal": [
                    "craves_a"
                ]
            },
            "parsed_ground_truth_plan": {
                "valid": false,
                "unmet_goal": [
                    "craves_a"
                ]
            },
            "llm_correct_binary": true,
            "llm_correct_w_type": true,
            "llm_correct_w_expl": true
        },
        {
            "instance_id": 2,
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Pain object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, harmony, planet object b, planet object c, province object a and province object b.\nMy goal is to have that object c craves object a. \nMy plan is as follows:\n\n[PLAN]\nfeast object a from object c\nsuccumb object a\nattack object c\novercome object c from object a\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is valid.\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object a, harmony, planet object a, planet object c, province object b and province object c.\nMy goal is to have that object b craves object c. \nMy plan is as follows:\n\n[PLAN]\nfeast object b from object a\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid. This is the unmet goal condition:\nobject b craves object c\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, harmony, planet object b, planet object c, province object a and province object c.\nMy goal is to have that object b craves object a and object c craves object b. \nMy plan is as follows:\n\n[PLAN]\nfeast object a from object b\nsuccumb object a\nattack object b\novercome object b from object a\nattack object c\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid. This is the unmet goal condition:\nobject c craves object b\n[STATEMENT]\nAs initial conditions I have that, harmony, planet object a, planet object b, planet object c, province object a, province object b and province object c.\nMy goal is to have that object a craves object c and object b craves object a. \nMy plan is as follows:\n\n[PLAN]\nattack object a\novercome object a from object c\nattack object b\n[PLAN END]\n\n[VERIFICATION]",
            "ground_truth_plan": "The above plan is invalid. This is the unmet goal condition:\nobject b craves object a",
            "llm_raw_response": "The above plan is invalid. This is the unmet goal condition:\nobject b craves object a",
            "extracted_llm_plan": {
                "valid": false,
                "unmet_goal": [
                    "craves_a"
                ]
            },
            "parsed_ground_truth_plan": {
                "valid": false,
                "unmet_goal": [
                    "craves_a"
                ]
            },
            "llm_correct_binary": true,
            "llm_correct_w_type": true,
            "llm_correct_w_expl": true
        },
        {
            "instance_id": 3,
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Pain object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, harmony, planet object a, planet object b, planet object c, province object a, province object b and province object c.\nMy goal is to have that object b craves object a and object c craves object b. \nMy plan is as follows:\n\n[PLAN]\novercome object c from object b\novercome object b from object a\nattack object b\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid.The following action at step 1 has an unmet precondition:\novercome object c from object b\nThe unmet precondition is:\npain object c\n[STATEMENT]\nAs initial conditions I have that, object b craves object c, harmony, planet object a, planet object c, province object a and province object b.\nMy goal is to have that object a craves object b and object c craves object a. \nMy plan is as follows:\n\n[PLAN]\nfeast object b from object c\nsuccumb object b\nattack object a\novercome object a from object b\nattack object c\novercome object c from object a\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is valid.\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object c, object c craves object a, harmony, planet object a and province object b.\nMy goal is to have that object a craves object b and object c craves object a. \nMy plan is as follows:\n\n[PLAN]\nfeast object b from object c\nsuccumb object b\nfeast object c from object a\nsuccumb object c\nattack object a\novercome object a from object b\nattack object c\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid. This is the unmet goal condition:\nobject c craves object a\n[STATEMENT]\nAs initial conditions I have that, object b craves object c, object c craves object a, harmony, planet object a and province object b.\nMy goal is to have that object b craves object a and object c craves object b. \nMy plan is as follows:\n\n[PLAN]\nfeast object b from object c\nsuccumb object b\nfeast object c from object a\nsuccumb object c\nattack object b\novercome object b from object a\nattack object c\novercome object c from object b\n[PLAN END]\n\n[VERIFICATION]",
            "ground_truth_plan": "The above plan is valid.\n",
            "llm_raw_response": "The above plan is valid.",
            "extracted_llm_plan": {
                "valid": true
            },
            "parsed_ground_truth_plan": {
                "valid": true
            },
            "llm_correct_binary": true,
            "llm_correct_w_type": true,
            "llm_correct_w_expl": true
        },
        {
            "instance_id": 4,
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Pain object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object c craves object a, harmony, planet object a, planet object b, province object b and province object c.\nMy goal is to have that object b craves object a and object c craves object b. \nMy plan is as follows:\n\n[PLAN]\nfeast object c from object a\nsuccumb object c\nattack object b\novercome object b from object a\nattack object c\novercome object c from object b\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is valid.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, harmony, planet object b, planet object c, province object a and province object b.\nMy goal is to have that object a craves object b. \nMy plan is as follows:\n\n[PLAN]\nfeast object a from object c\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid. This is the unmet goal condition:\nobject a craves object b\n[STATEMENT]\nAs initial conditions I have that, harmony, planet object a, planet object b, planet object c, province object a, province object b and province object c.\nMy goal is to have that object b craves object a and object c craves object b. \nMy plan is as follows:\n\n[PLAN]\novercome object b from object a\novercome object c from object b\nattack object b\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid.The following action at step 1 has an unmet precondition:\novercome object b from object a\nThe unmet precondition is:\npain object b\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, object b craves object c, harmony, planet object c and province object a.\nMy goal is to have that object b craves object a. \nMy plan is as follows:\n\n[PLAN]\novercome object b from object a\nfeast object b from object c\nfeast object a from object b\n[PLAN END]\n\n[VERIFICATION]",
            "ground_truth_plan": "The above plan is invalid.The following action at step 1 has an unmet precondition:\novercome object b from object a\nThe unmet precondition is:\npain object b",
            "llm_raw_response": "The above plan is invalid. This is the unmet goal condition:\nobject b craves object a",
            "extracted_llm_plan": {
                "valid": false,
                "unmet_goal": [
                    "craves_a"
                ]
            },
            "parsed_ground_truth_plan": {
                "valid": false,
                "unmet_precondition": {
                    "action": "(overcome object b object a)\n",
                    "predicate": [
                        "pain_b"
                    ]
                }
            },
            "llm_correct_binary": true,
            "llm_correct_w_type": false,
            "llm_correct_w_expl": false
        },
        {
            "instance_id": 5,
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Pain object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, harmony, planet object b, planet object c, province object a and province object b.\nMy goal is to have that object c craves object b. \nMy plan is as follows:\n\n[PLAN]\novercome object c from object b\nfeast object a from object c\nsuccumb object a\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid.The following action at step 1 has an unmet precondition:\novercome object c from object b\nThe unmet precondition is:\npain object c\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, object c craves object a, harmony, planet object b and province object c.\nMy goal is to have that object b craves object c. \nMy plan is as follows:\n\n[PLAN]\nfeast object c from object a\nsuccumb object c\nfeast object a from object b\nsuccumb object a\nattack object b\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid. This is the unmet goal condition:\nobject b craves object c\n[STATEMENT]\nAs initial conditions I have that, object c craves object b, harmony, planet object a, planet object b, province object a and province object c.\nMy goal is to have that object b craves object a and object c craves object b. \nMy plan is as follows:\n\n[PLAN]\nfeast object c from object b\nsuccumb object c\nattack object b\novercome object b from object a\nattack object c\novercome object c from object b\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is valid.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, object b craves object c, harmony, planet object c and province object a.\nMy goal is to have that object b craves object c and object c craves object a. \nMy plan is as follows:\n\n[PLAN]\nfeast object a from object b\nsuccumb object a\nfeast object b from object c\nsuccumb object b\nattack object c\novercome object c from object a\nattack object b\novercome object b from object c\n[PLAN END]\n\n[VERIFICATION]",
            "ground_truth_plan": "The above plan is valid.\n",
            "llm_raw_response": "The above plan is valid.",
            "extracted_llm_plan": {
                "valid": true
            },
            "parsed_ground_truth_plan": {
                "valid": true
            },
            "llm_correct_binary": true,
            "llm_correct_w_type": true,
            "llm_correct_w_expl": true
        },
        {
            "instance_id": 6,
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Pain object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, object b craves object a, harmony, planet object c and province object b.\nMy goal is to have that object c craves object a. \nMy plan is as follows:\n\n[PLAN]\nfeast object b from object a\nsuccumb object b\nfeast object a from object c\nsuccumb object a\nattack object c\novercome object c from object a\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is valid.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, object c craves object a, harmony, planet object b and province object c.\nMy goal is to have that object a craves object c. \nMy plan is as follows:\n\n[PLAN]\nfeast object c from object a\nsuccumb object c\nfeast object a from object b\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid. This is the unmet goal condition:\nobject a craves object c\n[STATEMENT]\nAs initial conditions I have that, harmony, planet object a, planet object b, planet object c, province object a, province object b and province object c.\nMy goal is to have that object a craves object b and object c craves object a. \nMy plan is as follows:\n\n[PLAN]\nattack object c\novercome object c from object a\nattack object a\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid.The following action at step 3 has an unmet precondition:\nattack object a\nThe unmet precondition is:\nprovince object a\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, object c craves object b, harmony, planet object b and province object a.\nMy goal is to have that object b craves object c and object c craves object a. \nMy plan is as follows:\n\n[PLAN]\nfeast object a from object c\nsuccumb object a\nfeast object c from object b\novercome object c from object a\nattack object b\n[PLAN END]\n\n[VERIFICATION]",
            "ground_truth_plan": "The above plan is invalid. This is the unmet goal condition:\nobject b craves object c",
            "llm_raw_response": "The above plan is valid.",
            "extracted_llm_plan": {
                "valid": true
            },
            "parsed_ground_truth_plan": {
                "valid": false,
                "unmet_goal": [
                    "craves_b"
                ]
            },
            "llm_correct_binary": false,
            "llm_correct_w_type": false,
            "llm_correct_w_expl": false
        },
        {
            "instance_id": 7,
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Pain object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object c, harmony, planet object a, planet object c, province object a and province object b.\nMy goal is to have that object c craves object b. \nMy plan is as follows:\n\n[PLAN]\nfeast object b from object c\nsuccumb object b\nattack object c\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid. This is the unmet goal condition:\nobject c craves object b\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, harmony, planet object b, planet object c, province object a and province object c.\nMy goal is to have that object a craves object b and object b craves object c. \nMy plan is as follows:\n\n[PLAN]\nfeast object a from object b\nsuccumb object a\nattack object b\novercome object b from object c\nattack object a\novercome object a from object b\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is valid.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, harmony, planet object b, planet object c, province object a and province object b.\nMy goal is to have that object c craves object a. \nMy plan is as follows:\n\n[PLAN]\nfeast object a from object c\nsuccumb object a\novercome object c from object a\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid.The following action at step 3 has an unmet precondition:\novercome object c from object a\nThe unmet precondition is:\npain object c\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, harmony, planet object b, planet object c, province object a and province object b.\nMy goal is to have that object a craves object b and object b craves object c. \nMy plan is as follows:\n\n[PLAN]\nfeast object a from object c\nsuccumb object a\nattack object b\novercome object b from object c\nattack object a\novercome object a from object b\n[PLAN END]\n\n[VERIFICATION]",
            "ground_truth_plan": "The above plan is valid.\n",
            "llm_raw_response": "The above plan is valid.",
            "extracted_llm_plan": {
                "valid": true
            },
            "parsed_ground_truth_plan": {
                "valid": true
            },
            "llm_correct_binary": true,
            "llm_correct_w_type": true,
            "llm_correct_w_expl": true
        },
        {
            "instance_id": 8,
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Pain object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object c, object c craves object a, harmony, planet object a and province object b.\nMy goal is to have that object a craves object c and object b craves object a. \nMy plan is as follows:\n\n[PLAN]\nfeast object b from object c\nsuccumb object b\nfeast object c from object a\nsuccumb object c\nattack object a\novercome object a from object c\nattack object b\novercome object b from object a\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is valid.\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object a, object c craves object b, harmony, planet object a and province object c.\nMy goal is to have that object c craves object a. \nMy plan is as follows:\n\n[PLAN]\nfeast object c from object b\novercome object c from object a\nsuccumb object c\nattack object c\nsuccumb object b\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid.The following action at step 2 has an unmet precondition:\novercome object c from object a\nThe unmet precondition is:\nprovince object a\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, object c craves object a, harmony, planet object b and province object c.\nMy goal is to have that object b craves object c. \nMy plan is as follows:\n\n[PLAN]\nfeast object c from object a\nsuccumb object c\nfeast object a from object b\nsuccumb object a\nattack object b\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid. This is the unmet goal condition:\nobject b craves object c\n[STATEMENT]\nAs initial conditions I have that, harmony, planet object a, planet object b, planet object c, province object a, province object b and province object c.\nMy goal is to have that object a craves object c. \nMy plan is as follows:\n\n[PLAN]\nattack object a\n[PLAN END]\n\n[VERIFICATION]",
            "ground_truth_plan": "The above plan is invalid. This is the unmet goal condition:\nobject a craves object c",
            "llm_raw_response": "The above plan is invalid. The following action at step 1 has an unmet precondition:\nattack object a\nThe unmet precondition is:\nObject Craves other object",
            "extracted_llm_plan": {
                "valid": false,
                "unmet_precondition": {
                    "action": "(attack object a)\n",
                    "predicate": []
                }
            },
            "parsed_ground_truth_plan": {
                "valid": false,
                "unmet_goal": [
                    "craves_a"
                ]
            },
            "llm_correct_binary": true,
            "llm_correct_w_type": false,
            "llm_correct_w_expl": false
        },
        {
            "instance_id": 9,
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Pain object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object c, harmony, planet object a, planet object c, province object a and province object b.\nMy goal is to have that object b craves object c and object c craves object a. \nMy plan is as follows:\n\n[PLAN]\nfeast object b from object c\nsuccumb object b\nattack object c\novercome object c from object a\nattack object b\novercome object b from object c\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is valid.\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object c, object c craves object a, harmony, planet object a and province object b.\nMy goal is to have that object a craves object c and object b craves object a. \nMy plan is as follows:\n\n[PLAN]\nfeast object b from object c\nsuccumb object b\nfeast object c from object a\nsuccumb object c\nattack object a\novercome object a from object c\nattack object b\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid. This is the unmet goal condition:\nobject b craves object a\n[STATEMENT]\nAs initial conditions I have that, object b craves object a, harmony, planet object a, planet object c, province object b and province object c.\nMy goal is to have that object a craves object b. \nMy plan is as follows:\n\n[PLAN]\novercome object a from object b\nfeast object b from object a\nsuccumb object b\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid.The following action at step 1 has an unmet precondition:\novercome object a from object b\nThe unmet precondition is:\npain object a\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, harmony, planet object b, planet object c, province object a and province object b.\nMy goal is to have that object c craves object a. \nMy plan is as follows:\n\n[PLAN]\nfeast object a from object c\nsuccumb object a\nattack object c\novercome object c from object a\n[PLAN END]\n\n[VERIFICATION]",
            "ground_truth_plan": "The above plan is valid.\n",
            "llm_raw_response": "The above plan is valid.",
            "extracted_llm_plan": {
                "valid": true
            },
            "parsed_ground_truth_plan": {
                "valid": true
            },
            "llm_correct_binary": true,
            "llm_correct_w_type": true,
            "llm_correct_w_expl": true
        },
        {
            "instance_id": 10,
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Pain object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, object b craves object c, harmony, planet object c and province object a.\nMy goal is to have that object a craves object c and object b craves object a. \nMy plan is as follows:\n\n[PLAN]\novercome object b from object a\nfeast object b from object c\nattack object b\novercome object a from object c\nfeast object a from object b\nsuccumb object a\nattack object a\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid.The following action at step 1 has an unmet precondition:\novercome object b from object a\nThe unmet precondition is:\npain object b\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, harmony, planet object b, planet object c, province object a and province object b.\nMy goal is to have that object a craves object c and object b craves object a. \nMy plan is as follows:\n\n[PLAN]\nattack object b\novercome object b from object a\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is valid.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, object c craves object a, harmony, planet object b and province object c.\nMy goal is to have that object b craves object c. \nMy plan is as follows:\n\n[PLAN]\nfeast object c from object a\nsuccumb object c\nfeast object a from object b\nsuccumb object a\nattack object b\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid. This is the unmet goal condition:\nobject b craves object c\n[STATEMENT]\nAs initial conditions I have that, object b craves object c, harmony, planet object a, planet object c, province object a and province object b.\nMy goal is to have that object a craves object c and object c craves object b. \nMy plan is as follows:\n\n[PLAN]\novercome object a from object c\nfeast object b from object c\nattack object c\nattack object a\novercome object c from object b\n[PLAN END]\n\n[VERIFICATION]",
            "ground_truth_plan": "The above plan is invalid. The following action at step 1 has unmet preconditions:\novercome object a from object c\nThe unmet preconditions are:\npain object a and province object c",
            "llm_raw_response": "The above plan is invalid. The following action at step 5 has an unmet precondition:\novercome object c from object b\nThe unmet precondition is:\npain object c",
            "extracted_llm_plan": {
                "valid": false,
                "unmet_precondition": {
                    "action": "(overcome object c object b)\n",
                    "predicate": [
                        "pain_c"
                    ]
                }
            },
            "parsed_ground_truth_plan": {
                "valid": false,
                "unmet_precondition": {
                    "action": "(overcome object a object c)\n",
                    "predicate": [
                        "pain_a",
                        "province_c"
                    ]
                }
            },
            "llm_correct_binary": true,
            "llm_correct_w_type": true,
            "llm_correct_w_expl": false
        },
        {
            "instance_id": 11,
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Pain object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, object c craves object b, harmony, planet object b and province object a.\nMy goal is to have that object a craves object b. \nMy plan is as follows:\n\n[PLAN]\nfeast object a from object c\nsuccumb object a\nfeast object c from object b\nsuccumb object c\nattack object a\novercome object a from object b\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is valid.\n\n[STATEMENT]\nAs initial conditions I have that, object c craves object b, harmony, planet object a, planet object b, province object a and province object c.\nMy goal is to have that object a craves object b and object c craves object a. \nMy plan is as follows:\n\n[PLAN]\nfeast object c from object b\nsuccumb object c\nattack object a\novercome object a from object b\nattack object c\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid. This is the unmet goal condition:\nobject c craves object a\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, harmony, planet object b, planet object c, province object a and province object c.\nMy goal is to have that object a craves object c and object c craves object b. \nMy plan is as follows:\n\n[PLAN]\nsuccumb object a\nattack object c\nfeast object a from object b\novercome object c from object b\novercome object a from object c\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid.The following action at step 1 has an unmet precondition:\nsuccumb object a\nThe unmet precondition is:\npain object a\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, object c craves object a, harmony, planet object b and province object c.\nMy goal is to have that object b craves object a and object c craves object b. \nMy plan is as follows:\n\n[PLAN]\nfeast object c from object a\nsuccumb object c\nfeast object a from object b\nsuccumb object a\nattack object b\novercome object b from object a\nattack object c\n[PLAN END]\n\n[VERIFICATION]",
            "ground_truth_plan": "The above plan is invalid. This is the unmet goal condition:\nobject c craves object b",
            "llm_raw_response": "The above plan is invalid. This is the unmet goal condition:\nobject c craves object b",
            "extracted_llm_plan": {
                "valid": false,
                "unmet_goal": [
                    "craves_b"
                ]
            },
            "parsed_ground_truth_plan": {
                "valid": false,
                "unmet_goal": [
                    "craves_b"
                ]
            },
            "llm_correct_binary": true,
            "llm_correct_w_type": true,
            "llm_correct_w_expl": true
        },
        {
            "instance_id": 12,
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Pain object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, harmony, planet object b, planet object c, province object a and province object c.\nMy goal is to have that object a craves object c and object c craves object b. \nMy plan is as follows:\n\n[PLAN]\nfeast object a from object b\novercome object a from object c\nattack object c\nsuccumb object a\novercome object c from object b\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid.The following action at step 3 has an unmet precondition:\nattack object c\nThe unmet precondition is:\nprovince object c\n[STATEMENT]\nAs initial conditions I have that, harmony, planet object a, planet object b, planet object c, province object a, province object b and province object c.\nMy goal is to have that object b craves object c and object c craves object a. \nMy plan is as follows:\n\n[PLAN]\nattack object c\novercome object c from object a\nattack object b\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid. This is the unmet goal condition:\nobject b craves object c\n[STATEMENT]\nAs initial conditions I have that, object c craves object b, harmony, planet object a, planet object b, province object a and province object c.\nMy goal is to have that object a craves object b. \nMy plan is as follows:\n\n[PLAN]\nfeast object c from object b\nsuccumb object c\nattack object a\novercome object a from object b\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is valid.\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object a, harmony, planet object a, planet object c, province object b and province object c.\nMy goal is to have that object a craves object b and object c craves object a. \nMy plan is as follows:\n\n[PLAN]\nattack object a\novercome object a from object b\nsuccumb object b\novercome object c from object a\nfeast object b from object a\n[PLAN END]\n\n[VERIFICATION]",
            "ground_truth_plan": "The above plan is invalid.The following action at step 1 has an unmet precondition:\nattack object a\nThe unmet precondition is:\nprovince object a",
            "llm_raw_response": "The above plan is valid.",
            "extracted_llm_plan": {
                "valid": true
            },
            "parsed_ground_truth_plan": {
                "valid": false,
                "unmet_precondition": {
                    "action": "(attack object a)\n",
                    "predicate": [
                        "province_a"
                    ]
                }
            },
            "llm_correct_binary": false,
            "llm_correct_w_type": false,
            "llm_correct_w_expl": false
        },
        {
            "instance_id": 13,
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Pain object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, object c craves object b, harmony, planet object b and province object a.\nMy goal is to have that object b craves object c and object c craves object a. \nMy plan is as follows:\n\n[PLAN]\nfeast object a from object c\nsuccumb object a\novercome object c from object a\novercome object b from object c\nattack object b\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid.The following action at step 3 has an unmet precondition:\novercome object c from object a\nThe unmet precondition is:\npain object c\n[STATEMENT]\nAs initial conditions I have that, object b craves object c, harmony, planet object a, planet object c, province object a and province object b.\nMy goal is to have that object a craves object c and object c craves object b. \nMy plan is as follows:\n\n[PLAN]\nfeast object b from object c\nsuccumb object b\nattack object c\novercome object c from object b\nattack object a\novercome object a from object c\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is valid.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, object c craves object a, harmony, planet object b and province object c.\nMy goal is to have that object b craves object a and object c craves object b. \nMy plan is as follows:\n\n[PLAN]\nfeast object c from object a\nsuccumb object c\nfeast object a from object b\nsuccumb object a\nattack object b\novercome object b from object a\nattack object c\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid. This is the unmet goal condition:\nobject c craves object b\n[STATEMENT]\nAs initial conditions I have that, object b craves object a, harmony, planet object a, planet object c, province object b and province object c.\nMy goal is to have that object b craves object c and object c craves object a. \nMy plan is as follows:\n\n[PLAN]\nfeast object b from object a\nsuccumb object b\nattack object c\novercome object c from object a\nattack object b\n[PLAN END]\n\n[VERIFICATION]",
            "ground_truth_plan": "The above plan is invalid. This is the unmet goal condition:\nobject b craves object c",
            "llm_raw_response": "The above plan is invalid. The following action at step 5 has an unmet precondition:\nattack object b\nThe unmet precondition is:\nplanet object b\n\nA valid plan could not be generated based on the given initial conditions and goal. Please revise the initial conditions or goal and try again.",
            "extracted_llm_plan": {
                "valid": false,
                "unmet_precondition": {
                    "action": "(attack object b)\n",
                    "predicate": [
                        "planet_b"
                    ]
                }
            },
            "parsed_ground_truth_plan": {
                "valid": false,
                "unmet_goal": [
                    "craves_b"
                ]
            },
            "llm_correct_binary": true,
            "llm_correct_w_type": false,
            "llm_correct_w_expl": false
        },
        {
            "instance_id": 14,
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Pain object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object c craves object a, harmony, planet object a, planet object b, province object b and province object c.\nMy goal is to have that object b craves object c. \nMy plan is as follows:\n\n[PLAN]\nattack object b\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid. This is the unmet goal condition:\nobject b craves object c\n[STATEMENT]\nAs initial conditions I have that, harmony, planet object a, planet object b, planet object c, province object a, province object b and province object c.\nMy goal is to have that object b craves object c and object c craves object a. \nMy plan is as follows:\n\n[PLAN]\nattack object c\novercome object c from object a\nattack object b\novercome object b from object c\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is valid.\n\n[STATEMENT]\nAs initial conditions I have that, object c craves object a, harmony, planet object a, planet object b, province object b and province object c.\nMy goal is to have that object b craves object a. \nMy plan is as follows:\n\n[PLAN]\nfeast object c from object a\nsuccumb object c\nattack object b\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid. This is the unmet goal condition:\nobject b craves object a\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, harmony, planet object b, planet object c, province object a and province object b.\nMy goal is to have that object a craves object c and object c craves object b. \nMy plan is as follows:\n\n[PLAN]\nfeast object a from object c\nsuccumb object a\nattack object c\novercome object c from object b\nattack object a\novercome object a from object c\n[PLAN END]\n\n[VERIFICATION]",
            "ground_truth_plan": "The above plan is valid.\n",
            "llm_raw_response": "The above plan is valid.",
            "extracted_llm_plan": {
                "valid": true
            },
            "parsed_ground_truth_plan": {
                "valid": true
            },
            "llm_correct_binary": true,
            "llm_correct_w_type": true,
            "llm_correct_w_expl": true
        },
        {
            "instance_id": 15,
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Pain object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object a, harmony, planet object a, planet object c, province object b and province object c.\nMy goal is to have that object a craves object b. \nMy plan is as follows:\n\n[PLAN]\nfeast object b from object a\nsuccumb object b\nattack object a\novercome object a from object b\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is valid.\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object a, harmony, planet object a, planet object c, province object b and province object c.\nMy goal is to have that object a craves object b. \nMy plan is as follows:\n\n[PLAN]\nfeast object b from object a\nattack object a\novercome object a from object b\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid.The following action at step 2 has an unmet precondition:\nattack object a\nThe unmet precondition is:\nharmony\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, harmony, planet object b, planet object c, province object a and province object c.\nMy goal is to have that object b craves object a and object c craves object b. \nMy plan is as follows:\n\n[PLAN]\nfeast object a from object b\nsuccumb object a\nattack object b\novercome object b from object a\nattack object c\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid. This is the unmet goal condition:\nobject c craves object b\n[STATEMENT]\nAs initial conditions I have that, object c craves object b, harmony, planet object a, planet object b, province object a and province object c.\nMy goal is to have that object a craves object b. \nMy plan is as follows:\n\n[PLAN]\nfeast object c from object b\novercome object a from object b\nattack object a\n[PLAN END]\n\n[VERIFICATION]",
            "ground_truth_plan": "The above plan is invalid.The following action at step 2 has an unmet precondition:\novercome object a from object b\nThe unmet precondition is:\npain object a",
            "llm_raw_response": "The above plan is invalid. The following action at step 2 has an unmet precondition:\novercome object a from object b\nThe unmet precondition is:\nPain object",
            "extracted_llm_plan": {
                "valid": false,
                "unmet_precondition": {
                    "action": "(overcome object a object b)\n",
                    "predicate": []
                }
            },
            "parsed_ground_truth_plan": {
                "valid": false,
                "unmet_precondition": {
                    "action": "(overcome object a object b)\n",
                    "predicate": [
                        "pain_a"
                    ]
                }
            },
            "llm_correct_binary": true,
            "llm_correct_w_type": true,
            "llm_correct_w_expl": false
        },
        {
            "instance_id": 16,
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Pain object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object a, harmony, planet object a, planet object c, province object b and province object c.\nMy goal is to have that object c craves object b. \nMy plan is as follows:\n\n[PLAN]\nattack object c\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid. This is the unmet goal condition:\nobject c craves object b\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, object b craves object a, harmony, planet object c and province object b.\nMy goal is to have that object c craves object b. \nMy plan is as follows:\n\n[PLAN]\nfeast object b from object a\nsuccumb object b\nfeast object a from object c\nsuccumb object a\nattack object c\novercome object c from object b\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is valid.\n\n[STATEMENT]\nAs initial conditions I have that, object c craves object a, harmony, planet object a, planet object b, province object b and province object c.\nMy goal is to have that object a craves object c. \nMy plan is as follows:\n\n[PLAN]\novercome object a from object c\nfeast object c from object a\nattack object a\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid.The following action at step 1 has an unmet precondition:\novercome object a from object c\nThe unmet precondition is:\npain object a\n[STATEMENT]\nAs initial conditions I have that, object b craves object c, object c craves object a, harmony, planet object a and province object b.\nMy goal is to have that object a craves object c and object b craves object a. \nMy plan is as follows:\n\n[PLAN]\nfeast object b from object c\nsuccumb object b\nfeast object c from object a\nsuccumb object c\nattack object a\novercome object a from object c\nattack object b\novercome object b from object a\n[PLAN END]\n\n[VERIFICATION]",
            "ground_truth_plan": "The above plan is valid.\n",
            "llm_raw_response": "The above plan is valid.",
            "extracted_llm_plan": {
                "valid": true
            },
            "parsed_ground_truth_plan": {
                "valid": true
            },
            "llm_correct_binary": true,
            "llm_correct_w_type": true,
            "llm_correct_w_expl": true
        },
        {
            "instance_id": 17,
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Pain object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object c, harmony, planet object a, planet object c, province object a and province object b.\nMy goal is to have that object a craves object c and object b craves object a. \nMy plan is as follows:\n\n[PLAN]\nfeast object b from object c\nsuccumb object b\nattack object a\novercome object a from object c\nattack object b\novercome object b from object a\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is valid.\n\n[STATEMENT]\nAs initial conditions I have that, object c craves object a, harmony, planet object a, planet object b, province object b and province object c.\nMy goal is to have that object b craves object a and object c craves object b. \nMy plan is as follows:\n\n[PLAN]\nfeast object c from object a\nsuccumb object c\nattack object b\novercome object b from object a\nattack object c\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid. This is the unmet goal condition:\nobject c craves object b\n[STATEMENT]\nAs initial conditions I have that, object b craves object a, harmony, planet object a, planet object c, province object b and province object c.\nMy goal is to have that object b craves object a and object c craves object b. \nMy plan is as follows:\n\n[PLAN]\nattack object c\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid. This is the unmet goal condition:\nobject c craves object b\n[STATEMENT]\nAs initial conditions I have that, harmony, planet object a, planet object b, planet object c, province object a, province object b and province object c.\nMy goal is to have that object a craves object b and object c craves object a. \nMy plan is as follows:\n\n[PLAN]\nattack object c\nattack object a\novercome object c from object a\n[PLAN END]\n\n[VERIFICATION]",
            "ground_truth_plan": "The above plan is invalid.The following action at step 2 has an unmet precondition:\nattack object a\nThe unmet precondition is:\nharmony",
            "llm_raw_response": "The above plan is invalid. This is the unmet goal condition:\nobject a craves object b",
            "extracted_llm_plan": {
                "valid": false,
                "unmet_goal": [
                    "craves_a"
                ]
            },
            "parsed_ground_truth_plan": {
                "valid": false,
                "unmet_precondition": {
                    "action": "(attack object a)\n",
                    "predicate": [
                        "harmony_"
                    ]
                }
            },
            "llm_correct_binary": true,
            "llm_correct_w_type": false,
            "llm_correct_w_expl": false
        },
        {
            "instance_id": 18,
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Pain object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object c craves object a, harmony, planet object a, planet object b, province object b and province object c.\nMy goal is to have that object a craves object b and object b craves object c. \nMy plan is as follows:\n\n[PLAN]\nfeast object c from object a\nattack object b\novercome object a from object b\nsuccumb object c\novercome object b from object c\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid.The following action at step 2 has an unmet precondition:\nattack object b\nThe unmet precondition is:\nharmony\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, object c craves object a, harmony, planet object b and province object c.\nMy goal is to have that object a craves object c and object c craves object b. \nMy plan is as follows:\n\n[PLAN]\nfeast object c from object a\nsuccumb object c\nfeast object a from object b\nsuccumb object a\nattack object c\novercome object c from object b\nattack object a\novercome object a from object c\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is valid.\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object c, harmony, planet object a, planet object c, province object a and province object b.\nMy goal is to have that object b craves object c and object c craves object a. \nMy plan is as follows:\n\n[PLAN]\nfeast object b from object c\nsuccumb object b\nattack object c\novercome object c from object a\nattack object b\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid. This is the unmet goal condition:\nobject b craves object c\n[STATEMENT]\nAs initial conditions I have that, object b craves object a, object c craves object b, harmony, planet object a and province object c.\nMy goal is to have that object a craves object c and object c craves object b. \nMy plan is as follows:\n\n[PLAN]\nattack object c\nfeast object b from object a\nsuccumb object b\nsuccumb object c\nfeast object c from object b\novercome object c from object b\novercome object a from object c\n[PLAN END]\n\n[VERIFICATION]",
            "ground_truth_plan": "The above plan is invalid.The following action at step 1 has an unmet precondition:\nattack object c\nThe unmet precondition is:\nplanet object c",
            "llm_raw_response": "The above plan is valid.",
            "extracted_llm_plan": {
                "valid": true
            },
            "parsed_ground_truth_plan": {
                "valid": false,
                "unmet_precondition": {
                    "action": "(attack object c)\n",
                    "predicate": [
                        "planet_c"
                    ]
                }
            },
            "llm_correct_binary": false,
            "llm_correct_w_type": false,
            "llm_correct_w_expl": false
        },
        {
            "instance_id": 19,
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Pain object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object c craves object b, harmony, planet object a, planet object b, province object a and province object c.\nMy goal is to have that object a craves object b and object c craves object a. \nMy plan is as follows:\n\n[PLAN]\nfeast object c from object b\nsuccumb object c\nattack object a\novercome object a from object b\nattack object c\novercome object c from object a\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is valid.\n\n[STATEMENT]\nAs initial conditions I have that, object c craves object b, harmony, planet object a, planet object b, province object a and province object c.\nMy goal is to have that object a craves object b and object c craves object a. \nMy plan is as follows:\n\n[PLAN]\nfeast object c from object b\nsuccumb object c\nattack object a\novercome object a from object b\nattack object c\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid. This is the unmet goal condition:\nobject c craves object a\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, object b craves object c, harmony, planet object c and province object a.\nMy goal is to have that object a craves object c and object b craves object a. \nMy plan is as follows:\n\n[PLAN]\nattack object b\nattack object a\nfeast object b from object c\novercome object a from object c\nsuccumb object b\nfeast object a from object b\novercome object b from object a\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid. The following action at step 1 has unmet preconditions:\nattack object b\nThe unmet preconditions are:\nplanet object b and province object b\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, harmony, planet object b, planet object c, province object a and province object c.\nMy goal is to have that object a craves object c and object b craves object a. \nMy plan is as follows:\n\n[PLAN]\nfeast object a from object b\novercome object a from object c\nattack object b\n[PLAN END]\n\n[VERIFICATION]",
            "ground_truth_plan": "The above plan is invalid. This is the unmet goal condition:\nobject b craves object a",
            "llm_raw_response": "The above plan is invalid. The following action at step 3 has unmet preconditions:\nattack object b\nThe unmet preconditions are:\nprovince object b",
            "extracted_llm_plan": {
                "valid": false,
                "unmet_precondition": {
                    "action": "(attack object b)\n",
                    "predicate": [
                        "province_b"
                    ]
                }
            },
            "parsed_ground_truth_plan": {
                "valid": false,
                "unmet_goal": [
                    "craves_a"
                ]
            },
            "llm_correct_binary": true,
            "llm_correct_w_type": false,
            "llm_correct_w_expl": false
        },
        {
            "instance_id": 20,
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Pain object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, harmony, planet object a, planet object b, planet object c, province object a, province object b and province object c.\nMy goal is to have that object b craves object c. \nMy plan is as follows:\n\n[PLAN]\nattack object b\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid. This is the unmet goal condition:\nobject b craves object c\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, harmony, planet object b, planet object c, province object a and province object b.\nMy goal is to have that object b craves object c and object c craves object a. \nMy plan is as follows:\n\n[PLAN]\nfeast object a from object c\nsuccumb object a\nattack object c\novercome object c from object a\nattack object b\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid. This is the unmet goal condition:\nobject b craves object c\n[STATEMENT]\nAs initial conditions I have that, object b craves object a, harmony, planet object a, planet object c, province object b and province object c.\nMy goal is to have that object a craves object c and object b craves object a. \nMy plan is as follows:\n\n[PLAN]\nfeast object b from object a\nsuccumb object b\nattack object a\novercome object a from object c\nattack object b\novercome object b from object a\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is valid.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, harmony, planet object b, planet object c, province object a and province object b.\nMy goal is to have that object b craves object a. \nMy plan is as follows:\n\n[PLAN]\nattack object b\novercome object b from object a\n[PLAN END]\n\n[VERIFICATION]",
            "ground_truth_plan": "The above plan is valid.\n",
            "llm_raw_response": "The above plan is valid.",
            "extracted_llm_plan": {
                "valid": true
            },
            "parsed_ground_truth_plan": {
                "valid": true
            },
            "llm_correct_binary": true,
            "llm_correct_w_type": true,
            "llm_correct_w_expl": true
        },
        {
            "instance_id": 21,
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Pain object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, object c craves object a, harmony, planet object b and province object c.\nMy goal is to have that object a craves object c and object b craves object a. \nMy plan is as follows:\n\n[PLAN]\nfeast object c from object a\novercome object b from object a\nsuccumb object c\nattack object b\nfeast object a from object b\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid.The following action at step 2 has an unmet precondition:\novercome object b from object a\nThe unmet precondition is:\npain object b\n[STATEMENT]\nAs initial conditions I have that, object b craves object c, harmony, planet object a, planet object c, province object a and province object b.\nMy goal is to have that object c craves object a. \nMy plan is as follows:\n\n[PLAN]\nfeast object b from object c\nsuccumb object b\nattack object c\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid. This is the unmet goal condition:\nobject c craves object a\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, harmony, planet object b, planet object c, province object a and province object c.\nMy goal is to have that object c craves object b. \nMy plan is as follows:\n\n[PLAN]\nfeast object a from object b\nsuccumb object a\nattack object c\novercome object c from object b\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is valid.\n\n[STATEMENT]\nAs initial conditions I have that, object c craves object b, harmony, planet object a, planet object b, province object a and province object c.\nMy goal is to have that object a craves object c and object b craves object a. \nMy plan is as follows:\n\n[PLAN]\nfeast object c from object b\nsuccumb object c\nattack object a\novercome object a from object c\nattack object b\novercome object b from object a\n[PLAN END]\n\n[VERIFICATION]",
            "ground_truth_plan": "The above plan is valid.\n",
            "llm_raw_response": "The above plan is valid.",
            "extracted_llm_plan": {
                "valid": true
            },
            "parsed_ground_truth_plan": {
                "valid": true
            },
            "llm_correct_binary": true,
            "llm_correct_w_type": true,
            "llm_correct_w_expl": true
        },
        {
            "instance_id": 22,
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Pain object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object c, harmony, planet object a, planet object c, province object a and province object b.\nMy goal is to have that object a craves object c and object b craves object a. \nMy plan is as follows:\n\n[PLAN]\nsuccumb object b\nfeast object b from object c\novercome object a from object c\nattack object b\novercome object b from object a\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid.The following action at step 1 has an unmet precondition:\nsuccumb object b\nThe unmet precondition is:\npain object b\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, harmony, planet object b, planet object c, province object a and province object c.\nMy goal is to have that object b craves object c. \nMy plan is as follows:\n\n[PLAN]\nfeast object a from object b\nsuccumb object a\nattack object b\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid. This is the unmet goal condition:\nobject b craves object c\n[STATEMENT]\nAs initial conditions I have that, object c craves object a, harmony, planet object a, planet object b, province object b and province object c.\nMy goal is to have that object b craves object c. \nMy plan is as follows:\n\n[PLAN]\nattack object b\novercome object b from object c\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is valid.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, object c craves object b, harmony, planet object b and province object a.\nMy goal is to have that object b craves object c. \nMy plan is as follows:\n\n[PLAN]\nfeast object a from object c\nsuccumb object a\nfeast object c from object b\nsuccumb object c\nattack object b\novercome object b from object c\n[PLAN END]\n\n[VERIFICATION]",
            "ground_truth_plan": "The above plan is valid.\n",
            "llm_raw_response": "The above plan is valid.",
            "extracted_llm_plan": {
                "valid": true
            },
            "parsed_ground_truth_plan": {
                "valid": true
            },
            "llm_correct_binary": true,
            "llm_correct_w_type": true,
            "llm_correct_w_expl": true
        },
        {
            "instance_id": 23,
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Pain object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, object c craves object a, harmony, planet object b and province object c.\nMy goal is to have that object a craves object c. \nMy plan is as follows:\n\n[PLAN]\nfeast object c from object a\nfeast object a from object b\novercome object a from object c\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid.The following action at step 2 has an unmet precondition:\nfeast object a from object b\nThe unmet precondition is:\nharmony\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, harmony, planet object b, planet object c, province object a and province object c.\nMy goal is to have that object b craves object a. \nMy plan is as follows:\n\n[PLAN]\nfeast object a from object b\nsuccumb object a\nattack object b\novercome object b from object a\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is valid.\n\n[STATEMENT]\nAs initial conditions I have that, harmony, planet object a, planet object b, planet object c, province object a, province object b and province object c.\nMy goal is to have that object a craves object c and object b craves object a. \nMy plan is as follows:\n\n[PLAN]\nattack object a\novercome object a from object c\nattack object b\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid. This is the unmet goal condition:\nobject b craves object a\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, object c craves object a, harmony, planet object b and province object c.\nMy goal is to have that object c craves object b. \nMy plan is as follows:\n\n[PLAN]\nfeast object c from object a\nsuccumb object c\nfeast object a from object b\nsuccumb object a\nattack object c\novercome object c from object b\n[PLAN END]\n\n[VERIFICATION]",
            "ground_truth_plan": "The above plan is valid.\n",
            "llm_raw_response": "The above plan is valid.",
            "extracted_llm_plan": {
                "valid": true
            },
            "parsed_ground_truth_plan": {
                "valid": true
            },
            "llm_correct_binary": true,
            "llm_correct_w_type": true,
            "llm_correct_w_expl": true
        },
        {
            "instance_id": 24,
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Pain object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object c, object c craves object a, harmony, planet object a and province object b.\nMy goal is to have that object a craves object b and object c craves object a. \nMy plan is as follows:\n\n[PLAN]\nfeast object b from object c\nsuccumb object b\nfeast object c from object a\nsuccumb object c\nattack object a\novercome object a from object b\nattack object c\novercome object c from object a\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is valid.\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object c, harmony, planet object a, planet object c, province object a and province object b.\nMy goal is to have that object a craves object b and object c craves object a. \nMy plan is as follows:\n\n[PLAN]\novercome object a from object b\nattack object c\novercome object c from object a\nfeast object b from object c\nattack object a\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid.The following action at step 1 has an unmet precondition:\novercome object a from object b\nThe unmet precondition is:\npain object a\n[STATEMENT]\nAs initial conditions I have that, object c craves object b, harmony, planet object a, planet object b, province object a and province object c.\nMy goal is to have that object b craves object a and object c craves object b. \nMy plan is as follows:\n\n[PLAN]\nfeast object c from object b\nsuccumb object c\nattack object b\novercome object b from object a\nattack object c\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid. This is the unmet goal condition:\nobject c craves object b\n[STATEMENT]\nAs initial conditions I have that, harmony, planet object a, planet object b, planet object c, province object a, province object b and province object c.\nMy goal is to have that object a craves object b and object b craves object c. \nMy plan is as follows:\n\n[PLAN]\nattack object b\novercome object b from object c\nattack object a\novercome object a from object b\n[PLAN END]\n\n[VERIFICATION]",
            "ground_truth_plan": "The above plan is valid.\n",
            "llm_raw_response": "The above plan is valid.",
            "extracted_llm_plan": {
                "valid": true
            },
            "parsed_ground_truth_plan": {
                "valid": true
            },
            "llm_correct_binary": true,
            "llm_correct_w_type": true,
            "llm_correct_w_expl": true
        },
        {
            "instance_id": 25,
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Pain object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object a, harmony, planet object a, planet object c, province object b and province object c.\nMy goal is to have that object c craves object a. \nMy plan is as follows:\n\n[PLAN]\nfeast object b from object a\nsuccumb object b\nattack object c\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid. This is the unmet goal condition:\nobject c craves object a\n[STATEMENT]\nAs initial conditions I have that, object c craves object b, harmony, planet object a, planet object b, province object a and province object c.\nMy goal is to have that object a craves object c. \nMy plan is as follows:\n\n[PLAN]\nattack object a\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid. This is the unmet goal condition:\nobject a craves object c\n[STATEMENT]\nAs initial conditions I have that, object b craves object a, object c craves object b, harmony, planet object a and province object c.\nMy goal is to have that object a craves object b. \nMy plan is as follows:\n\n[PLAN]\nfeast object c from object b\nsuccumb object c\nfeast object b from object a\nsuccumb object b\nattack object a\novercome object a from object b\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is valid.\n\n[STATEMENT]\nAs initial conditions I have that, object c craves object b, harmony, planet object a, planet object b, province object a and province object c.\nMy goal is to have that object b craves object a and object c craves object b. \nMy plan is as follows:\n\n[PLAN]\nfeast object c from object b\nsuccumb object c\nattack object b\novercome object b from object a\nattack object c\n[PLAN END]\n\n[VERIFICATION]",
            "ground_truth_plan": "The above plan is invalid. This is the unmet goal condition:\nobject c craves object b",
            "llm_raw_response": "The above plan is invalid. This is the unmet goal condition:\nobject b craves object a",
            "extracted_llm_plan": {
                "valid": false,
                "unmet_goal": [
                    "craves_a"
                ]
            },
            "parsed_ground_truth_plan": {
                "valid": false,
                "unmet_goal": [
                    "craves_b"
                ]
            },
            "llm_correct_binary": true,
            "llm_correct_w_type": true,
            "llm_correct_w_expl": false
        },
        {
            "instance_id": 26,
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Pain object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, harmony, planet object b, planet object c, province object a and province object b.\nMy goal is to have that object b craves object a. \nMy plan is as follows:\n\n[PLAN]\nattack object b\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid. This is the unmet goal condition:\nobject b craves object a\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, object c craves object a, harmony, planet object b and province object c.\nMy goal is to have that object a craves object c. \nMy plan is as follows:\n\n[PLAN]\nfeast object c from object a\nsuccumb object c\nfeast object a from object b\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid. This is the unmet goal condition:\nobject a craves object c\n[STATEMENT]\nAs initial conditions I have that, object b craves object a, harmony, planet object a, planet object c, province object b and province object c.\nMy goal is to have that object c craves object a. \nMy plan is as follows:\n\n[PLAN]\nfeast object b from object a\nsuccumb object b\nattack object c\novercome object c from object a\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is valid.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, object b craves object a, harmony, planet object c and province object b.\nMy goal is to have that object c craves object b. \nMy plan is as follows:\n\n[PLAN]\novercome object c from object b\nattack object c\nfeast object a from object c\nsuccumb object a\nfeast object b from object a\n[PLAN END]\n\n[VERIFICATION]",
            "ground_truth_plan": "The above plan is invalid.The following action at step 1 has an unmet precondition:\novercome object c from object b\nThe unmet precondition is:\npain object c",
            "llm_raw_response": "The above plan is valid.",
            "extracted_llm_plan": {
                "valid": true
            },
            "parsed_ground_truth_plan": {
                "valid": false,
                "unmet_precondition": {
                    "action": "(overcome object c object b)\n",
                    "predicate": [
                        "pain_c"
                    ]
                }
            },
            "llm_correct_binary": false,
            "llm_correct_w_type": false,
            "llm_correct_w_expl": false
        },
        {
            "instance_id": 27,
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Pain object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object c, harmony, planet object a, planet object c, province object a and province object b.\nMy goal is to have that object a craves object b and object c craves object a. \nMy plan is as follows:\n\n[PLAN]\nattack object c\nsuccumb object b\novercome object c from object a\novercome object a from object b\nfeast object b from object c\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid.The following action at step 1 has an unmet precondition:\nattack object c\nThe unmet precondition is:\nprovince object c\n[STATEMENT]\nAs initial conditions I have that, harmony, planet object a, planet object b, planet object c, province object a, province object b and province object c.\nMy goal is to have that object a craves object b and object c craves object a. \nMy plan is as follows:\n\n[PLAN]\nattack object a\novercome object a from object b\nattack object c\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid. This is the unmet goal condition:\nobject c craves object a\n[STATEMENT]\nAs initial conditions I have that, object b craves object c, object c craves object a, harmony, planet object a and province object b.\nMy goal is to have that object a craves object c and object b craves object a. \nMy plan is as follows:\n\n[PLAN]\nfeast object b from object c\nsuccumb object b\nfeast object c from object a\nsuccumb object c\nattack object a\novercome object a from object c\nattack object b\novercome object b from object a\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is valid.\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object c, object c craves object a, harmony, planet object a and province object b.\nMy goal is to have that object a craves object c and object c craves object b. \nMy plan is as follows:\n\n[PLAN]\nfeast object b from object c\nsuccumb object b\nfeast object c from object a\novercome object c from object b\nattack object a\n[PLAN END]\n\n[VERIFICATION]",
            "ground_truth_plan": "The above plan is invalid. This is the unmet goal condition:\nobject a craves object c",
            "llm_raw_response": "The above plan is invalid. This is the unmet goal condition:\nobject a craves object c",
            "extracted_llm_plan": {
                "valid": false,
                "unmet_goal": [
                    "craves_a"
                ]
            },
            "parsed_ground_truth_plan": {
                "valid": false,
                "unmet_goal": [
                    "craves_a"
                ]
            },
            "llm_correct_binary": true,
            "llm_correct_w_type": true,
            "llm_correct_w_expl": true
        },
        {
            "instance_id": 28,
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Pain object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, object b craves object a, harmony, planet object c and province object b.\nMy goal is to have that object c craves object a. \nMy plan is as follows:\n\n[PLAN]\nfeast object b from object a\nfeast object a from object c\novercome object c from object a\nsuccumb object b\nsuccumb object a\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid.The following action at step 2 has an unmet precondition:\nfeast object a from object c\nThe unmet precondition is:\nharmony\n[STATEMENT]\nAs initial conditions I have that, object c craves object a, harmony, planet object a, planet object b, province object b and province object c.\nMy goal is to have that object c craves object b. \nMy plan is as follows:\n\n[PLAN]\nfeast object c from object a\novercome object c from object b\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is valid.\n\n[STATEMENT]\nAs initial conditions I have that, object c craves object b, harmony, planet object a, planet object b, province object a and province object c.\nMy goal is to have that object a craves object b. \nMy plan is as follows:\n\n[PLAN]\nfeast object c from object b\nsuccumb object c\nattack object a\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid. This is the unmet goal condition:\nobject a craves object b\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, object c craves object a, harmony, planet object b and province object c.\nMy goal is to have that object a craves object b and object b craves object c. \nMy plan is as follows:\n\n[PLAN]\nfeast object c from object a\nsuccumb object c\nfeast object a from object b\nsuccumb object a\nattack object b\novercome object b from object c\nattack object a\n[PLAN END]\n\n[VERIFICATION]",
            "ground_truth_plan": "The above plan is invalid. This is the unmet goal condition:\nobject a craves object b",
            "llm_raw_response": "The above plan is valid.",
            "extracted_llm_plan": {
                "valid": true
            },
            "parsed_ground_truth_plan": {
                "valid": false,
                "unmet_goal": [
                    "craves_a"
                ]
            },
            "llm_correct_binary": false,
            "llm_correct_w_type": false,
            "llm_correct_w_expl": false
        },
        {
            "instance_id": 29,
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Pain object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object a, harmony, planet object a, planet object c, province object b and province object c.\nMy goal is to have that object b craves object c. \nMy plan is as follows:\n\n[PLAN]\nfeast object b from object a\novercome object b from object c\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is valid.\n\n[STATEMENT]\nAs initial conditions I have that, object c craves object a, harmony, planet object a, planet object b, province object b and province object c.\nMy goal is to have that object a craves object b. \nMy plan is as follows:\n\n[PLAN]\nfeast object c from object a\nsuccumb object c\nattack object a\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid. This is the unmet goal condition:\nobject a craves object b\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, object c craves object b, harmony, planet object b and province object a.\nMy goal is to have that object a craves object b. \nMy plan is as follows:\n\n[PLAN]\nattack object a\novercome object a from object b\nsuccumb object c\nsuccumb object a\nfeast object a from object c\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid.The following action at step 1 has an unmet precondition:\nattack object a\nThe unmet precondition is:\nplanet object a\n[STATEMENT]\nAs initial conditions I have that, object b craves object a, harmony, planet object a, planet object c, province object b and province object c.\nMy goal is to have that object a craves object c and object b craves object a. \nMy plan is as follows:\n\n[PLAN]\nfeast object b from object a\nsuccumb object b\nattack object a\novercome object a from object c\nattack object b\novercome object b from object a\n[PLAN END]\n\n[VERIFICATION]",
            "ground_truth_plan": "The above plan is valid.\n",
            "llm_raw_response": "The above plan is invalid. The following action at step 3 has an unmet precondition:\nattack object a\nThe unmet precondition is:\nprovince object a",
            "extracted_llm_plan": {
                "valid": false,
                "unmet_precondition": {
                    "action": "(attack object a)\n",
                    "predicate": [
                        "province_a"
                    ]
                }
            },
            "parsed_ground_truth_plan": {
                "valid": true
            },
            "llm_correct_binary": false,
            "llm_correct_w_type": false,
            "llm_correct_w_expl": false
        },
        {
            "instance_id": 30,
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Pain object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object c craves object a, harmony, planet object a, planet object b, province object b and province object c.\nMy goal is to have that object a craves object b and object b craves object c. \nMy plan is as follows:\n\n[PLAN]\novercome object b from object c\nattack object b\nattack object a\nfeast object c from object a\novercome object a from object b\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid.The following action at step 1 has an unmet precondition:\novercome object b from object c\nThe unmet precondition is:\npain object b\n[STATEMENT]\nAs initial conditions I have that, object b craves object c, harmony, planet object a, planet object c, province object a and province object b.\nMy goal is to have that object b craves object a. \nMy plan is as follows:\n\n[PLAN]\nfeast object b from object c\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid. This is the unmet goal condition:\nobject b craves object a\n[STATEMENT]\nAs initial conditions I have that, object b craves object c, harmony, planet object a, planet object c, province object a and province object b.\nMy goal is to have that object c craves object a. \nMy plan is as follows:\n\n[PLAN]\nfeast object b from object c\nsuccumb object b\nattack object c\novercome object c from object a\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is valid.\n\n[STATEMENT]\nAs initial conditions I have that, object c craves object a, harmony, planet object a, planet object b, province object b and province object c.\nMy goal is to have that object a craves object c. \nMy plan is as follows:\n\n[PLAN]\nattack object a\nfeast object c from object a\novercome object a from object c\n[PLAN END]\n\n[VERIFICATION]",
            "ground_truth_plan": "The above plan is invalid.The following action at step 1 has an unmet precondition:\nattack object a\nThe unmet precondition is:\nprovince object a",
            "llm_raw_response": "The above plan is valid.",
            "extracted_llm_plan": {
                "valid": true
            },
            "parsed_ground_truth_plan": {
                "valid": false,
                "unmet_precondition": {
                    "action": "(attack object a)\n",
                    "predicate": [
                        "province_a"
                    ]
                }
            },
            "llm_correct_binary": false,
            "llm_correct_w_type": false,
            "llm_correct_w_expl": false
        },
        {
            "instance_id": 31,
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Pain object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object c, harmony, planet object a, planet object c, province object a and province object b.\nMy goal is to have that object a craves object c and object c craves object b. \nMy plan is as follows:\n\n[PLAN]\nfeast object b from object c\nsuccumb object b\nattack object c\novercome object c from object b\nattack object a\novercome object a from object c\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is valid.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, object b craves object a, harmony, planet object c and province object b.\nMy goal is to have that object a craves object b and object b craves object c. \nMy plan is as follows:\n\n[PLAN]\nattack object a\nsuccumb object b\novercome object a from object b\nfeast object a from object c\nfeast object b from object a\nsuccumb object a\novercome object b from object c\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid. The following action at step 1 has unmet preconditions:\nattack object a\nThe unmet preconditions are:\nplanet object a and province object a\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, harmony, planet object b, planet object c, province object a and province object c.\nMy goal is to have that object b craves object a. \nMy plan is as follows:\n\n[PLAN]\nfeast object a from object b\nsuccumb object a\nattack object b\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid. This is the unmet goal condition:\nobject b craves object a\n[STATEMENT]\nAs initial conditions I have that, object b craves object c, harmony, planet object a, planet object c, province object a and province object b.\nMy goal is to have that object c craves object b. \nMy plan is as follows:\n\n[PLAN]\nfeast object b from object c\novercome object c from object b\nattack object c\n[PLAN END]\n\n[VERIFICATION]",
            "ground_truth_plan": "The above plan is invalid. The following action at step 2 has unmet preconditions:\novercome object c from object b\nThe unmet preconditions are:\npain object c and province object b",
            "llm_raw_response": "The above plan is valid.",
            "extracted_llm_plan": {
                "valid": true
            },
            "parsed_ground_truth_plan": {
                "valid": false,
                "unmet_precondition": {
                    "action": "(overcome object c object b)\n",
                    "predicate": [
                        "pain_c",
                        "province_b"
                    ]
                }
            },
            "llm_correct_binary": false,
            "llm_correct_w_type": false,
            "llm_correct_w_expl": false
        },
        {
            "instance_id": 32,
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Pain object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, object c craves object b, harmony, planet object b and province object a.\nMy goal is to have that object a craves object b and object b craves object c. \nMy plan is as follows:\n\n[PLAN]\nfeast object a from object c\nsuccumb object a\nfeast object c from object b\nsuccumb object c\nattack object b\novercome object b from object c\nattack object a\novercome object a from object b\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is valid.\n\n[STATEMENT]\nAs initial conditions I have that, object c craves object b, harmony, planet object a, planet object b, province object a and province object c.\nMy goal is to have that object b craves object c. \nMy plan is as follows:\n\n[PLAN]\nfeast object c from object b\nsuccumb object c\nattack object b\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid. This is the unmet goal condition:\nobject b craves object c\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, object b craves object c, harmony, planet object c and province object a.\nMy goal is to have that object b craves object a. \nMy plan is as follows:\n\n[PLAN]\nfeast object a from object b\nfeast object b from object c\novercome object b from object a\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid.The following action at step 2 has an unmet precondition:\nfeast object b from object c\nThe unmet precondition is:\nharmony\n[STATEMENT]\nAs initial conditions I have that, object b craves object c, harmony, planet object a, planet object c, province object a and province object b.\nMy goal is to have that object b craves object a and object c craves object b. \nMy plan is as follows:\n\n[PLAN]\novercome object b from object a\novercome object c from object b\nfeast object b from object c\n[PLAN END]\n\n[VERIFICATION]",
            "ground_truth_plan": "The above plan is invalid.The following action at step 1 has an unmet precondition:\novercome object b from object a\nThe unmet precondition is:\npain object b",
            "llm_raw_response": "The above plan is invalid. The following action at step 1 has an unmet precondition:\novercome object b from object a\nThe unmet precondition is:\nPain object",
            "extracted_llm_plan": {
                "valid": false,
                "unmet_precondition": {
                    "action": "(overcome object b object a)\n",
                    "predicate": []
                }
            },
            "parsed_ground_truth_plan": {
                "valid": false,
                "unmet_precondition": {
                    "action": "(overcome object b object a)\n",
                    "predicate": [
                        "pain_b"
                    ]
                }
            },
            "llm_correct_binary": true,
            "llm_correct_w_type": true,
            "llm_correct_w_expl": false
        },
        {
            "instance_id": 33,
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Pain object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, object c craves object a, harmony, planet object b and province object c.\nMy goal is to have that object b craves object a and object c craves object b. \nMy plan is as follows:\n\n[PLAN]\nfeast object c from object a\nsuccumb object c\nfeast object a from object b\nsuccumb object a\nattack object b\novercome object b from object a\nattack object c\novercome object c from object b\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is valid.\n\n[STATEMENT]\nAs initial conditions I have that, object c craves object a, harmony, planet object a, planet object b, province object b and province object c.\nMy goal is to have that object b craves object c. \nMy plan is as follows:\n\n[PLAN]\nattack object b\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid. This is the unmet goal condition:\nobject b craves object c\n[STATEMENT]\nAs initial conditions I have that, object b craves object c, harmony, planet object a, planet object c, province object a and province object b.\nMy goal is to have that object c craves object b. \nMy plan is as follows:\n\n[PLAN]\nfeast object b from object c\nsuccumb object b\nattack object c\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid. This is the unmet goal condition:\nobject c craves object b\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, harmony, planet object b, planet object c, province object a and province object c.\nMy goal is to have that object c craves object a. \nMy plan is as follows:\n\n[PLAN]\nattack object c\n[PLAN END]\n\n[VERIFICATION]",
            "ground_truth_plan": "The above plan is invalid. This is the unmet goal condition:\nobject c craves object a",
            "llm_raw_response": "The above plan is invalid. This is the unmet goal condition:\nobject c craves object a",
            "extracted_llm_plan": {
                "valid": false,
                "unmet_goal": [
                    "craves_a"
                ]
            },
            "parsed_ground_truth_plan": {
                "valid": false,
                "unmet_goal": [
                    "craves_a"
                ]
            },
            "llm_correct_binary": true,
            "llm_correct_w_type": true,
            "llm_correct_w_expl": true
        },
        {
            "instance_id": 34,
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Pain object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, harmony, planet object b, planet object c, province object a and province object c.\nMy goal is to have that object b craves object a. \nMy plan is as follows:\n\n[PLAN]\nfeast object a from object b\nsuccumb object a\nattack object b\novercome object b from object a\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is valid.\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object a, harmony, planet object a, planet object c, province object b and province object c.\nMy goal is to have that object a craves object b. \nMy plan is as follows:\n\n[PLAN]\nfeast object b from object a\nsuccumb object b\nattack object a\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid. This is the unmet goal condition:\nobject a craves object b\n[STATEMENT]\nAs initial conditions I have that, object b craves object c, harmony, planet object a, planet object c, province object a and province object b.\nMy goal is to have that object a craves object c and object b craves object a. \nMy plan is as follows:\n\n[PLAN]\novercome object b from object a\nfeast object b from object c\novercome object a from object c\nattack object b\nattack object a\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid.The following action at step 1 has an unmet precondition:\novercome object b from object a\nThe unmet precondition is:\npain object b\n[STATEMENT]\nAs initial conditions I have that, object c craves object b, harmony, planet object a, planet object b, province object a and province object c.\nMy goal is to have that object b craves object c. \nMy plan is as follows:\n\n[PLAN]\novercome object b from object c\nsuccumb object c\nfeast object c from object b\n[PLAN END]\n\n[VERIFICATION]",
            "ground_truth_plan": "The above plan is invalid.The following action at step 1 has an unmet precondition:\novercome object b from object c\nThe unmet precondition is:\npain object b",
            "llm_raw_response": "The above plan is invalid. The following action at step 1 has an unmet precondition:\novercome object b from object c\nThe unmet precondition is:\npain object",
            "extracted_llm_plan": {
                "valid": false,
                "unmet_precondition": {
                    "action": "(overcome object b object c)\n",
                    "predicate": [
                        "pain_"
                    ]
                }
            },
            "parsed_ground_truth_plan": {
                "valid": false,
                "unmet_precondition": {
                    "action": "(overcome object b object c)\n",
                    "predicate": [
                        "pain_b"
                    ]
                }
            },
            "llm_correct_binary": true,
            "llm_correct_w_type": true,
            "llm_correct_w_expl": false
        },
        {
            "instance_id": 35,
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Pain object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, object b craves object a, harmony, planet object c and province object b.\nMy goal is to have that object c craves object a. \nMy plan is as follows:\n\n[PLAN]\nfeast object b from object a\nsuccumb object b\nfeast object a from object c\nsuccumb object a\nattack object c\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid. This is the unmet goal condition:\nobject c craves object a\n[STATEMENT]\nAs initial conditions I have that, object b craves object a, harmony, planet object a, planet object c, province object b and province object c.\nMy goal is to have that object a craves object c and object b craves object a. \nMy plan is as follows:\n\n[PLAN]\nfeast object b from object a\nsuccumb object b\nattack object a\novercome object a from object c\nattack object b\novercome object b from object a\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is valid.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, harmony, planet object b, planet object c, province object a and province object b.\nMy goal is to have that object a craves object b and object b craves object c. \nMy plan is as follows:\n\n[PLAN]\novercome object b from object c\nattack object b\novercome object a from object b\nfeast object a from object c\nattack object a\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid. The following action at step 1 has unmet preconditions:\novercome object b from object c\nThe unmet preconditions are:\npain object b and province object c\n[STATEMENT]\nAs initial conditions I have that, object b craves object a, object c craves object b, harmony, planet object a and province object c.\nMy goal is to have that object a craves object c and object b craves object a. \nMy plan is as follows:\n\n[PLAN]\nfeast object c from object b\nsuccumb object c\nfeast object b from object a\nsuccumb object b\nattack object a\novercome object a from object c\nattack object b\n[PLAN END]\n\n[VERIFICATION]",
            "ground_truth_plan": "The above plan is invalid. This is the unmet goal condition:\nobject b craves object a",
            "llm_raw_response": "The above plan is invalid. The following action at step 6 has unmet preconditions:\novercome object a from object c\nThe unmet preconditions are:\npain object a and province object c",
            "extracted_llm_plan": {
                "valid": false,
                "unmet_precondition": {
                    "action": "(overcome object a object c)\n",
                    "predicate": [
                        "pain_a",
                        "province_c"
                    ]
                }
            },
            "parsed_ground_truth_plan": {
                "valid": false,
                "unmet_goal": [
                    "craves_a"
                ]
            },
            "llm_correct_binary": true,
            "llm_correct_w_type": false,
            "llm_correct_w_expl": false
        },
        {
            "instance_id": 36,
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Pain object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, harmony, planet object b, planet object c, province object a and province object c.\nMy goal is to have that object b craves object a. \nMy plan is as follows:\n\n[PLAN]\nattack object b\novercome object b from object a\nfeast object a from object b\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid.The following action at step 1 has an unmet precondition:\nattack object b\nThe unmet precondition is:\nprovince object b\n[STATEMENT]\nAs initial conditions I have that, object b craves object a, object c craves object b, harmony, planet object a and province object c.\nMy goal is to have that object a craves object c and object c craves object b. \nMy plan is as follows:\n\n[PLAN]\nfeast object c from object b\nsuccumb object c\nfeast object b from object a\nsuccumb object b\nattack object c\novercome object c from object b\nattack object a\novercome object a from object c\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is valid.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, object b craves object c, harmony, planet object c and province object a.\nMy goal is to have that object b craves object c and object c craves object a. \nMy plan is as follows:\n\n[PLAN]\nfeast object a from object b\nsuccumb object a\nfeast object b from object c\nsuccumb object b\nattack object c\novercome object c from object a\nattack object b\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid. This is the unmet goal condition:\nobject b craves object c\n[STATEMENT]\nAs initial conditions I have that, object c craves object a, harmony, planet object a, planet object b, province object b and province object c.\nMy goal is to have that object c craves object b. \nMy plan is as follows:\n\n[PLAN]\nfeast object c from object a\n[PLAN END]\n\n[VERIFICATION]",
            "ground_truth_plan": "The above plan is invalid. This is the unmet goal condition:\nobject c craves object b",
            "llm_raw_response": "The above plan is invalid. The following action at step 1 has an unmet precondition:\nfeast object c from object a\nThe unmet precondition is:\nObject Craves other object",
            "extracted_llm_plan": {
                "valid": false,
                "unmet_precondition": {
                    "action": "(feast object c object a)\n",
                    "predicate": []
                }
            },
            "parsed_ground_truth_plan": {
                "valid": false,
                "unmet_goal": [
                    "craves_b"
                ]
            },
            "llm_correct_binary": true,
            "llm_correct_w_type": false,
            "llm_correct_w_expl": false
        },
        {
            "instance_id": 37,
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Pain object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object a, harmony, planet object a, planet object c, province object b and province object c.\nMy goal is to have that object a craves object c and object b craves object a. \nMy plan is as follows:\n\n[PLAN]\nfeast object b from object a\nsuccumb object b\nattack object a\novercome object a from object c\nattack object b\novercome object b from object a\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is valid.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, harmony, planet object b, planet object c, province object a and province object b.\nMy goal is to have that object a craves object c and object b craves object a. \nMy plan is as follows:\n\n[PLAN]\nattack object b\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid. This is the unmet goal condition:\nobject b craves object a\n[STATEMENT]\nAs initial conditions I have that, object c craves object b, harmony, planet object a, planet object b, province object a and province object c.\nMy goal is to have that object b craves object a and object c craves object b. \nMy plan is as follows:\n\n[PLAN]\nsuccumb object c\nattack object b\novercome object b from object a\nfeast object c from object b\novercome object c from object b\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid.The following action at step 1 has an unmet precondition:\nsuccumb object c\nThe unmet precondition is:\npain object c\n[STATEMENT]\nAs initial conditions I have that, object c craves object a, harmony, planet object a, planet object b, province object b and province object c.\nMy goal is to have that object b craves object a and object c craves object b. \nMy plan is as follows:\n\n[PLAN]\novercome object b from object a\nattack object c\novercome object c from object b\nattack object b\nfeast object c from object a\n[PLAN END]\n\n[VERIFICATION]",
            "ground_truth_plan": "The above plan is invalid. The following action at step 1 has unmet preconditions:\novercome object b from object a\nThe unmet preconditions are:\npain object b and province object a",
            "llm_raw_response": "The above plan is invalid. The following action at step 1 has an unmet precondition:\novercome object b from object a\nThe unmet precondition is:\npain object",
            "extracted_llm_plan": {
                "valid": false,
                "unmet_precondition": {
                    "action": "(overcome object b object a)\n",
                    "predicate": [
                        "pain_"
                    ]
                }
            },
            "parsed_ground_truth_plan": {
                "valid": false,
                "unmet_precondition": {
                    "action": "(overcome object b object a)\n",
                    "predicate": [
                        "pain_b",
                        "province_a"
                    ]
                }
            },
            "llm_correct_binary": true,
            "llm_correct_w_type": true,
            "llm_correct_w_expl": false
        },
        {
            "instance_id": 38,
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Pain object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, harmony, planet object b, planet object c, province object a and province object b.\nMy goal is to have that object a craves object b and object b craves object c. \nMy plan is as follows:\n\n[PLAN]\nfeast object a from object c\nsuccumb object a\nattack object b\novercome object b from object c\nattack object a\novercome object a from object b\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is valid.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, harmony, planet object b, planet object c, province object a and province object b.\nMy goal is to have that object b craves object c. \nMy plan is as follows:\n\n[PLAN]\nfeast object a from object c\nsuccumb object a\nattack object b\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid. This is the unmet goal condition:\nobject b craves object c\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, harmony, planet object b, planet object c, province object a and province object c.\nMy goal is to have that object b craves object a and object c craves object b. \nMy plan is as follows:\n\n[PLAN]\novercome object b from object a\nattack object c\nfeast object a from object b\nattack object b\novercome object c from object b\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid.The following action at step 1 has an unmet precondition:\novercome object b from object a\nThe unmet precondition is:\npain object b\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, object c craves object a, harmony, planet object b and province object c.\nMy goal is to have that object b craves object a. \nMy plan is as follows:\n\n[PLAN]\nfeast object c from object a\nsuccumb object c\nfeast object a from object b\nsuccumb object a\nattack object b\novercome object b from object a\n[PLAN END]\n\n[VERIFICATION]",
            "ground_truth_plan": "The above plan is valid.\n",
            "llm_raw_response": "The above plan is valid.",
            "extracted_llm_plan": {
                "valid": true
            },
            "parsed_ground_truth_plan": {
                "valid": true
            },
            "llm_correct_binary": true,
            "llm_correct_w_type": true,
            "llm_correct_w_expl": true
        },
        {
            "instance_id": 39,
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Pain object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, harmony, planet object b, planet object c, province object a and province object b.\nMy goal is to have that object a craves object b. \nMy plan is as follows:\n\n[PLAN]\nfeast object a from object c\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid. This is the unmet goal condition:\nobject a craves object b\n[STATEMENT]\nAs initial conditions I have that, object c craves object b, harmony, planet object a, planet object b, province object a and province object c.\nMy goal is to have that object b craves object c. \nMy plan is as follows:\n\n[PLAN]\nfeast object c from object b\nsuccumb object c\nattack object b\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid. This is the unmet goal condition:\nobject b craves object c\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, object b craves object c, harmony, planet object c and province object a.\nMy goal is to have that object b craves object a. \nMy plan is as follows:\n\n[PLAN]\nfeast object a from object b\nsuccumb object a\nfeast object b from object c\novercome object b from object a\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is valid.\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object c, object c craves object a, harmony, planet object a and province object b.\nMy goal is to have that object a craves object b and object c craves object a. \nMy plan is as follows:\n\n[PLAN]\nfeast object b from object c\nsuccumb object b\nfeast object c from object a\nsuccumb object c\nattack object a\novercome object a from object b\nattack object c\n[PLAN END]\n\n[VERIFICATION]",
            "ground_truth_plan": "The above plan is invalid. This is the unmet goal condition:\nobject c craves object a",
            "llm_raw_response": "The above plan is valid.",
            "extracted_llm_plan": {
                "valid": true
            },
            "parsed_ground_truth_plan": {
                "valid": false,
                "unmet_goal": [
                    "craves_a"
                ]
            },
            "llm_correct_binary": false,
            "llm_correct_w_type": false,
            "llm_correct_w_expl": false
        },
        {
            "instance_id": 40,
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Pain object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object a, harmony, planet object a, planet object c, province object b and province object c.\nMy goal is to have that object b craves object c. \nMy plan is as follows:\n\n[PLAN]\nfeast object b from object a\novercome object b from object c\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is valid.\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object c, object c craves object a, harmony, planet object a and province object b.\nMy goal is to have that object a craves object b. \nMy plan is as follows:\n\n[PLAN]\nfeast object b from object c\nsuccumb object b\nfeast object c from object a\nsuccumb object c\nattack object a\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid. This is the unmet goal condition:\nobject a craves object b\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, harmony, planet object b, planet object c, province object a and province object b.\nMy goal is to have that object b craves object c. \nMy plan is as follows:\n\n[PLAN]\nsuccumb object a\novercome object b from object c\nfeast object a from object c\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid.The following action at step 1 has an unmet precondition:\nsuccumb object a\nThe unmet precondition is:\npain object a\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, object c craves object b, harmony, planet object b and province object a.\nMy goal is to have that object a craves object b. \nMy plan is as follows:\n\n[PLAN]\nfeast object a from object c\nsuccumb object a\nfeast object c from object b\nsuccumb object c\nattack object a\n[PLAN END]\n\n[VERIFICATION]",
            "ground_truth_plan": "The above plan is invalid. This is the unmet goal condition:\nobject a craves object b",
            "llm_raw_response": "The above plan is invalid. This is the unmet goal condition:\nobject a craves object b",
            "extracted_llm_plan": {
                "valid": false,
                "unmet_goal": [
                    "craves_a"
                ]
            },
            "parsed_ground_truth_plan": {
                "valid": false,
                "unmet_goal": [
                    "craves_a"
                ]
            },
            "llm_correct_binary": true,
            "llm_correct_w_type": true,
            "llm_correct_w_expl": true
        },
        {
            "instance_id": 41,
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Pain object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, harmony, planet object a, planet object b, planet object c, province object a, province object b and province object c.\nMy goal is to have that object a craves object c and object b craves object a. \nMy plan is as follows:\n\n[PLAN]\nattack object a\novercome object a from object c\nattack object b\novercome object b from object a\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is valid.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, object c craves object a, harmony, planet object b and province object c.\nMy goal is to have that object a craves object b and object b craves object c. \nMy plan is as follows:\n\n[PLAN]\nattack object b\nfeast object a from object b\nattack object a\novercome object a from object b\nsuccumb object a\nfeast object c from object a\novercome object b from object c\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid.The following action at step 1 has an unmet precondition:\nattack object b\nThe unmet precondition is:\nprovince object b\n[STATEMENT]\nAs initial conditions I have that, object b craves object c, harmony, planet object a, planet object c, province object a and province object b.\nMy goal is to have that object b craves object a. \nMy plan is as follows:\n\n[PLAN]\nfeast object b from object c\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid. This is the unmet goal condition:\nobject b craves object a\n[STATEMENT]\nAs initial conditions I have that, object b craves object a, harmony, planet object a, planet object c, province object b and province object c.\nMy goal is to have that object b craves object a and object c craves object b. \nMy plan is as follows:\n\n[PLAN]\nattack object c\novercome object c from object b\n[PLAN END]\n\n[VERIFICATION]",
            "ground_truth_plan": "The above plan is valid.\n",
            "llm_raw_response": "The above plan is valid.",
            "extracted_llm_plan": {
                "valid": true
            },
            "parsed_ground_truth_plan": {
                "valid": true
            },
            "llm_correct_binary": true,
            "llm_correct_w_type": true,
            "llm_correct_w_expl": true
        },
        {
            "instance_id": 42,
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Pain object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, harmony, planet object b, planet object c, province object a and province object c.\nMy goal is to have that object b craves object c and object c craves object a. \nMy plan is as follows:\n\n[PLAN]\nfeast object a from object b\nsuccumb object a\nattack object c\novercome object c from object a\nattack object b\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid. This is the unmet goal condition:\nobject b craves object c\n[STATEMENT]\nAs initial conditions I have that, object b craves object a, harmony, planet object a, planet object c, province object b and province object c.\nMy goal is to have that object a craves object b. \nMy plan is as follows:\n\n[PLAN]\nfeast object b from object a\nsuccumb object b\nattack object a\novercome object a from object b\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is valid.\n\n[STATEMENT]\nAs initial conditions I have that, object c craves object b, harmony, planet object a, planet object b, province object a and province object c.\nMy goal is to have that object a craves object b and object c craves object a. \nMy plan is as follows:\n\n[PLAN]\nattack object a\nattack object c\novercome object a from object b\nfeast object c from object b\novercome object c from object a\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid. The following action at step 2 has unmet preconditions:\nattack object c\nThe unmet preconditions are:\nharmony and planet object c\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, harmony, planet object b, planet object c, province object a and province object c.\nMy goal is to have that object c craves object b. \nMy plan is as follows:\n\n[PLAN]\nfeast object a from object b\nsuccumb object a\nattack object c\novercome object c from object b\n[PLAN END]\n\n[VERIFICATION]",
            "ground_truth_plan": "The above plan is valid.\n",
            "llm_raw_response": "The above plan is valid.",
            "extracted_llm_plan": {
                "valid": true
            },
            "parsed_ground_truth_plan": {
                "valid": true
            },
            "llm_correct_binary": true,
            "llm_correct_w_type": true,
            "llm_correct_w_expl": true
        },
        {
            "instance_id": 43,
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Pain object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, harmony, planet object a, planet object b, planet object c, province object a, province object b and province object c.\nMy goal is to have that object a craves object c and object b craves object a. \nMy plan is as follows:\n\n[PLAN]\nattack object a\novercome object a from object c\nattack object b\novercome object b from object a\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is valid.\n\n[STATEMENT]\nAs initial conditions I have that, object c craves object b, harmony, planet object a, planet object b, province object a and province object c.\nMy goal is to have that object a craves object b. \nMy plan is as follows:\n\n[PLAN]\novercome object a from object b\nfeast object c from object b\nattack object a\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid. The following action at step 1 has unmet preconditions:\novercome object a from object b\nThe unmet preconditions are:\npain object a and province object b\n[STATEMENT]\nAs initial conditions I have that, harmony, planet object a, planet object b, planet object c, province object a, province object b and province object c.\nMy goal is to have that object b craves object a and object c craves object b. \nMy plan is as follows:\n\n[PLAN]\nattack object b\novercome object b from object a\nattack object c\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid. This is the unmet goal condition:\nobject c craves object b\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, object b craves object c, harmony, planet object c and province object a.\nMy goal is to have that object a craves object c. \nMy plan is as follows:\n\n[PLAN]\nfeast object a from object b\nsuccumb object a\nfeast object b from object c\nsuccumb object b\nattack object a\n[PLAN END]\n\n[VERIFICATION]",
            "ground_truth_plan": "The above plan is invalid. This is the unmet goal condition:\nobject a craves object c",
            "llm_raw_response": "The above plan is invalid. The following action at step 1 has unmet preconditions:\nfeast object a from object b\nThe unmet preconditions are:\nprovince object b",
            "extracted_llm_plan": {
                "valid": false,
                "unmet_precondition": {
                    "action": "(feast object a object b)\n",
                    "predicate": [
                        "province_b"
                    ]
                }
            },
            "parsed_ground_truth_plan": {
                "valid": false,
                "unmet_goal": [
                    "craves_a"
                ]
            },
            "llm_correct_binary": true,
            "llm_correct_w_type": false,
            "llm_correct_w_expl": false
        },
        {
            "instance_id": 44,
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Pain object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object c craves object a, harmony, planet object a, planet object b, province object b and province object c.\nMy goal is to have that object a craves object c. \nMy plan is as follows:\n\n[PLAN]\nfeast object c from object a\nsuccumb object c\nattack object a\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid. This is the unmet goal condition:\nobject a craves object c\n[STATEMENT]\nAs initial conditions I have that, object b craves object a, harmony, planet object a, planet object c, province object b and province object c.\nMy goal is to have that object c craves object b. \nMy plan is as follows:\n\n[PLAN]\nattack object c\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid. This is the unmet goal condition:\nobject c craves object b\n[STATEMENT]\nAs initial conditions I have that, object b craves object a, object c craves object b, harmony, planet object a and province object c.\nMy goal is to have that object a craves object c and object c craves object b. \nMy plan is as follows:\n\n[PLAN]\nfeast object c from object b\nsuccumb object c\nfeast object b from object a\nsuccumb object b\nattack object c\novercome object c from object b\nattack object a\novercome object a from object c\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is valid.\n\n[STATEMENT]\nAs initial conditions I have that, object c craves object a, harmony, planet object a, planet object b, province object b and province object c.\nMy goal is to have that object a craves object b and object b craves object c. \nMy plan is as follows:\n\n[PLAN]\nattack object b\nfeast object c from object a\novercome object b from object c\nsuccumb object c\novercome object a from object b\n[PLAN END]\n\n[VERIFICATION]",
            "ground_truth_plan": "The above plan is invalid.The following action at step 2 has an unmet precondition:\nfeast object c from object a\nThe unmet precondition is:\nharmony",
            "llm_raw_response": "The above plan is valid.",
            "extracted_llm_plan": {
                "valid": true
            },
            "parsed_ground_truth_plan": {
                "valid": false,
                "unmet_precondition": {
                    "action": "(feast object c object a)\n",
                    "predicate": [
                        "harmony_"
                    ]
                }
            },
            "llm_correct_binary": false,
            "llm_correct_w_type": false,
            "llm_correct_w_expl": false
        },
        {
            "instance_id": 45,
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Pain object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object c craves object b, harmony, planet object a, planet object b, province object a and province object c.\nMy goal is to have that object b craves object c. \nMy plan is as follows:\n\n[PLAN]\nfeast object c from object b\novercome object b from object c\nattack object b\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid. The following action at step 2 has unmet preconditions:\novercome object b from object c\nThe unmet preconditions are:\npain object b and province object c\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, harmony, planet object b, planet object c, province object a and province object c.\nMy goal is to have that object a craves object c and object c craves object b. \nMy plan is as follows:\n\n[PLAN]\nfeast object a from object b\nsuccumb object a\nattack object c\novercome object c from object b\nattack object a\novercome object a from object c\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is valid.\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object c, object c craves object a, harmony, planet object a and province object b.\nMy goal is to have that object a craves object c and object b craves object a. \nMy plan is as follows:\n\n[PLAN]\nfeast object b from object c\nsuccumb object b\nfeast object c from object a\nsuccumb object c\nattack object a\novercome object a from object c\nattack object b\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid. This is the unmet goal condition:\nobject b craves object a\n[STATEMENT]\nAs initial conditions I have that, object c craves object b, harmony, planet object a, planet object b, province object a and province object c.\nMy goal is to have that object a craves object c. \nMy plan is as follows:\n\n[PLAN]\nattack object a\n[PLAN END]\n\n[VERIFICATION]",
            "ground_truth_plan": "The above plan is invalid. This is the unmet goal condition:\nobject a craves object c",
            "llm_raw_response": "The above plan is invalid. The following action at step 1 has unmet preconditions:\nattack object a\nThe unmet preconditions are:\nProvince object a, Planet object a, Harmony",
            "extracted_llm_plan": {
                "valid": false,
                "unmet_precondition": {
                    "action": "(attack object a)\n",
                    "predicate": []
                }
            },
            "parsed_ground_truth_plan": {
                "valid": false,
                "unmet_goal": [
                    "craves_a"
                ]
            },
            "llm_correct_binary": true,
            "llm_correct_w_type": false,
            "llm_correct_w_expl": false
        },
        {
            "instance_id": 46,
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Pain object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, object c craves object b, harmony, planet object b and province object a.\nMy goal is to have that object b craves object a. \nMy plan is as follows:\n\n[PLAN]\nsuccumb object a\nattack object b\nfeast object a from object c\novercome object b from object a\nsuccumb object c\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid.The following action at step 1 has an unmet precondition:\nsuccumb object a\nThe unmet precondition is:\npain object a\n[STATEMENT]\nAs initial conditions I have that, object b craves object a, object c craves object b, harmony, planet object a and province object c.\nMy goal is to have that object a craves object c and object b craves object a. \nMy plan is as follows:\n\n[PLAN]\nfeast object c from object b\nsuccumb object c\nfeast object b from object a\nsuccumb object b\nattack object a\novercome object a from object c\nattack object b\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid. This is the unmet goal condition:\nobject b craves object a\n[STATEMENT]\nAs initial conditions I have that, object b craves object a, object c craves object b, harmony, planet object a and province object c.\nMy goal is to have that object c craves object a. \nMy plan is as follows:\n\n[PLAN]\nfeast object c from object b\nsuccumb object c\nfeast object b from object a\nsuccumb object b\nattack object c\novercome object c from object a\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is valid.\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object a, harmony, planet object a, planet object c, province object b and province object c.\nMy goal is to have that object a craves object b and object b craves object c. \nMy plan is as follows:\n\n[PLAN]\nfeast object b from object a\novercome object b from object c\nattack object a\n[PLAN END]\n\n[VERIFICATION]",
            "ground_truth_plan": "The above plan is invalid. This is the unmet goal condition:\nobject a craves object b",
            "llm_raw_response": "The above plan is invalid. This is the unmet goal condition:\nobject a craves object b",
            "extracted_llm_plan": {
                "valid": false,
                "unmet_goal": [
                    "craves_a"
                ]
            },
            "parsed_ground_truth_plan": {
                "valid": false,
                "unmet_goal": [
                    "craves_a"
                ]
            },
            "llm_correct_binary": true,
            "llm_correct_w_type": true,
            "llm_correct_w_expl": true
        },
        {
            "instance_id": 47,
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Pain object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, object c craves object b, harmony, planet object b and province object a.\nMy goal is to have that object b craves object c and object c craves object a. \nMy plan is as follows:\n\n[PLAN]\nfeast object a from object c\nsuccumb object a\nfeast object c from object b\novercome object c from object a\nattack object b\novercome object b from object c\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is valid.\n\n[STATEMENT]\nAs initial conditions I have that, object c craves object b, harmony, planet object a, planet object b, province object a and province object c.\nMy goal is to have that object b craves object c. \nMy plan is as follows:\n\n[PLAN]\nfeast object c from object b\nsuccumb object c\nattack object b\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid. This is the unmet goal condition:\nobject b craves object c\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, object b craves object a, harmony, planet object c and province object b.\nMy goal is to have that object a craves object b and object c craves object a. \nMy plan is as follows:\n\n[PLAN]\nattack object c\novercome object a from object b\novercome object c from object a\nfeast object a from object c\nfeast object b from object a\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid.The following action at step 1 has an unmet precondition:\nattack object c\nThe unmet precondition is:\nprovince object c\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, harmony, planet object b, planet object c, province object a and province object b.\nMy goal is to have that object a craves object b. \nMy plan is as follows:\n\n[PLAN]\nfeast object a from object c\n[PLAN END]\n\n[VERIFICATION]",
            "ground_truth_plan": "The above plan is invalid. This is the unmet goal condition:\nobject a craves object b",
            "llm_raw_response": "The above plan is invalid. This is the unmet goal condition:\nobject a craves object b",
            "extracted_llm_plan": {
                "valid": false,
                "unmet_goal": [
                    "craves_a"
                ]
            },
            "parsed_ground_truth_plan": {
                "valid": false,
                "unmet_goal": [
                    "craves_a"
                ]
            },
            "llm_correct_binary": true,
            "llm_correct_w_type": true,
            "llm_correct_w_expl": true
        },
        {
            "instance_id": 48,
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Pain object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object c craves object a, harmony, planet object a, planet object b, province object b and province object c.\nMy goal is to have that object a craves object b and object b craves object c. \nMy plan is as follows:\n\n[PLAN]\nfeast object c from object a\nsuccumb object c\nattack object b\novercome object b from object c\nattack object a\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid. This is the unmet goal condition:\nobject a craves object b\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, harmony, planet object b, planet object c, province object a and province object b.\nMy goal is to have that object b craves object c. \nMy plan is as follows:\n\n[PLAN]\novercome object b from object c\nattack object b\nfeast object a from object c\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid. The following action at step 1 has unmet preconditions:\novercome object b from object c\nThe unmet preconditions are:\npain object b and province object c\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, harmony, planet object b, planet object c, province object a and province object c.\nMy goal is to have that object b craves object a. \nMy plan is as follows:\n\n[PLAN]\nfeast object a from object b\nsuccumb object a\nattack object b\novercome object b from object a\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is valid.\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object c, harmony, planet object a, planet object c, province object a and province object b.\nMy goal is to have that object a craves object b and object b craves object c. \nMy plan is as follows:\n\n[PLAN]\nattack object a\n[PLAN END]\n\n[VERIFICATION]",
            "ground_truth_plan": "The above plan is invalid. This is the unmet goal condition:\nobject a craves object b",
            "llm_raw_response": "The above plan is invalid. This is the unmet goal condition:\nobject a craves object b",
            "extracted_llm_plan": {
                "valid": false,
                "unmet_goal": [
                    "craves_a"
                ]
            },
            "parsed_ground_truth_plan": {
                "valid": false,
                "unmet_goal": [
                    "craves_a"
                ]
            },
            "llm_correct_binary": true,
            "llm_correct_w_type": true,
            "llm_correct_w_expl": true
        },
        {
            "instance_id": 49,
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Pain object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, object b craves object c, harmony, planet object c and province object a.\nMy goal is to have that object a craves object c. \nMy plan is as follows:\n\n[PLAN]\nsuccumb object b\nfeast object a from object b\nattack object a\novercome object a from object c\nsuccumb object a\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid.The following action at step 1 has an unmet precondition:\nsuccumb object b\nThe unmet precondition is:\npain object b\n[STATEMENT]\nAs initial conditions I have that, object b craves object a, object c craves object b, harmony, planet object a and province object c.\nMy goal is to have that object a craves object c and object c craves object b. \nMy plan is as follows:\n\n[PLAN]\nfeast object c from object b\nsuccumb object c\nfeast object b from object a\nsuccumb object b\nattack object c\novercome object c from object b\nattack object a\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid. This is the unmet goal condition:\nobject a craves object c\n[STATEMENT]\nAs initial conditions I have that, object b craves object a, harmony, planet object a, planet object c, province object b and province object c.\nMy goal is to have that object b craves object c and object c craves object a. \nMy plan is as follows:\n\n[PLAN]\nfeast object b from object a\nsuccumb object b\nattack object c\novercome object c from object a\nattack object b\novercome object b from object c\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is valid.\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object c, harmony, planet object a, planet object c, province object a and province object b.\nMy goal is to have that object a craves object c and object b craves object a. \nMy plan is as follows:\n\n[PLAN]\nfeast object b from object c\nsuccumb object b\nattack object a\novercome object a from object c\nattack object b\novercome object b from object a\n[PLAN END]\n\n[VERIFICATION]",
            "ground_truth_plan": "The above plan is valid.\n",
            "llm_raw_response": "The above plan is valid.",
            "extracted_llm_plan": {
                "valid": true
            },
            "parsed_ground_truth_plan": {
                "valid": true
            },
            "llm_correct_binary": true,
            "llm_correct_w_type": true,
            "llm_correct_w_expl": true
        },
        {
            "instance_id": 50,
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Pain object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object c, harmony, planet object a, planet object c, province object a and province object b.\nMy goal is to have that object a craves object b and object c craves object a. \nMy plan is as follows:\n\n[PLAN]\nfeast object b from object c\nsuccumb object b\nattack object a\novercome object a from object b\nattack object c\novercome object c from object a\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is valid.\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object c, harmony, planet object a, planet object c, province object a and province object b.\nMy goal is to have that object b craves object c and object c craves object a. \nMy plan is as follows:\n\n[PLAN]\nattack object b\nfeast object b from object c\novercome object c from object a\nattack object c\novercome object b from object c\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid.The following action at step 1 has an unmet precondition:\nattack object b\nThe unmet precondition is:\nplanet object b\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, harmony, planet object b, planet object c, province object a and province object b.\nMy goal is to have that object a craves object c and object b craves object a. \nMy plan is as follows:\n\n[PLAN]\nattack object b\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid. This is the unmet goal condition:\nobject b craves object a\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, object c craves object b, harmony, planet object b and province object a.\nMy goal is to have that object b craves object a. \nMy plan is as follows:\n\n[PLAN]\nsuccumb object a\nfeast object c from object b\novercome object b from object a\nfeast object a from object c\nsuccumb object c\n[PLAN END]\n\n[VERIFICATION]",
            "ground_truth_plan": "The above plan is invalid.The following action at step 1 has an unmet precondition:\nsuccumb object a\nThe unmet precondition is:\npain object a",
            "llm_raw_response": "The above plan is valid.",
            "extracted_llm_plan": {
                "valid": true
            },
            "parsed_ground_truth_plan": {
                "valid": false,
                "unmet_precondition": {
                    "action": "(succumb object a)\n",
                    "predicate": [
                        "pain_a"
                    ]
                }
            },
            "llm_correct_binary": false,
            "llm_correct_w_type": false,
            "llm_correct_w_expl": false
        },
        {
            "instance_id": 51,
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Pain object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object c craves object b, harmony, planet object a, planet object b, province object a and province object c.\nMy goal is to have that object a craves object c. \nMy plan is as follows:\n\n[PLAN]\nattack object a\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid. This is the unmet goal condition:\nobject a craves object c\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, harmony, planet object b, planet object c, province object a and province object b.\nMy goal is to have that object b craves object c. \nMy plan is as follows:\n\n[PLAN]\nfeast object a from object c\novercome object b from object c\nattack object b\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid.The following action at step 2 has an unmet precondition:\novercome object b from object c\nThe unmet precondition is:\npain object b\n[STATEMENT]\nAs initial conditions I have that, object c craves object a, harmony, planet object a, planet object b, province object b and province object c.\nMy goal is to have that object b craves object a and object c craves object b. \nMy plan is as follows:\n\n[PLAN]\nfeast object c from object a\nsuccumb object c\nattack object b\novercome object b from object a\nattack object c\novercome object c from object b\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is valid.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, object c craves object a, harmony, planet object b and province object c.\nMy goal is to have that object a craves object c and object b craves object a. \nMy plan is as follows:\n\n[PLAN]\nfeast object c from object a\nsuccumb object c\nfeast object a from object b\novercome object a from object c\nattack object b\novercome object b from object a\n[PLAN END]\n\n[VERIFICATION]",
            "ground_truth_plan": "The above plan is valid.\n",
            "llm_raw_response": "The above plan is valid.",
            "extracted_llm_plan": {
                "valid": true
            },
            "parsed_ground_truth_plan": {
                "valid": true
            },
            "llm_correct_binary": true,
            "llm_correct_w_type": true,
            "llm_correct_w_expl": true
        },
        {
            "instance_id": 52,
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Pain object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, object b craves object a, harmony, planet object c and province object b.\nMy goal is to have that object c craves object b. \nMy plan is as follows:\n\n[PLAN]\nfeast object b from object a\nsuccumb object b\nfeast object a from object c\nsuccumb object a\nattack object c\novercome object c from object b\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is valid.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, object c craves object b, harmony, planet object b and province object a.\nMy goal is to have that object b craves object c and object c craves object a. \nMy plan is as follows:\n\n[PLAN]\nattack object b\novercome object b from object c\nsuccumb object a\nfeast object a from object c\nfeast object c from object b\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid.The following action at step 1 has an unmet precondition:\nattack object b\nThe unmet precondition is:\nprovince object b\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, harmony, planet object b, planet object c, province object a and province object c.\nMy goal is to have that object c craves object b. \nMy plan is as follows:\n\n[PLAN]\nfeast object a from object b\nsuccumb object a\nattack object c\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid. This is the unmet goal condition:\nobject c craves object b\n[STATEMENT]\nAs initial conditions I have that, object c craves object a, harmony, planet object a, planet object b, province object b and province object c.\nMy goal is to have that object a craves object b. \nMy plan is as follows:\n\n[PLAN]\nfeast object c from object a\nsuccumb object c\nattack object a\n[PLAN END]\n\n[VERIFICATION]",
            "ground_truth_plan": "The above plan is invalid. This is the unmet goal condition:\nobject a craves object b",
            "llm_raw_response": "The above plan is invalid. This is the unmet goal condition:\nobject a craves object b",
            "extracted_llm_plan": {
                "valid": false,
                "unmet_goal": [
                    "craves_a"
                ]
            },
            "parsed_ground_truth_plan": {
                "valid": false,
                "unmet_goal": [
                    "craves_a"
                ]
            },
            "llm_correct_binary": true,
            "llm_correct_w_type": true,
            "llm_correct_w_expl": true
        },
        {
            "instance_id": 53,
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Pain object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, harmony, planet object a, planet object b, planet object c, province object a, province object b and province object c.\nMy goal is to have that object a craves object b and object c craves object a. \nMy plan is as follows:\n\n[PLAN]\novercome object c from object a\nattack object c\nattack object a\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid.The following action at step 1 has an unmet precondition:\novercome object c from object a\nThe unmet precondition is:\npain object c\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, harmony, planet object b, planet object c, province object a and province object b.\nMy goal is to have that object a craves object c and object b craves object a. \nMy plan is as follows:\n\n[PLAN]\nattack object b\novercome object b from object a\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is valid.\n\n[STATEMENT]\nAs initial conditions I have that, harmony, planet object a, planet object b, planet object c, province object a, province object b and province object c.\nMy goal is to have that object b craves object c and object c craves object a. \nMy plan is as follows:\n\n[PLAN]\nattack object c\novercome object c from object a\nattack object b\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid. This is the unmet goal condition:\nobject b craves object c\n[STATEMENT]\nAs initial conditions I have that, object b craves object a, harmony, planet object a, planet object c, province object b and province object c.\nMy goal is to have that object a craves object b. \nMy plan is as follows:\n\n[PLAN]\novercome object a from object b\nfeast object b from object a\nattack object a\n[PLAN END]\n\n[VERIFICATION]",
            "ground_truth_plan": "The above plan is invalid.The following action at step 1 has an unmet precondition:\novercome object a from object b\nThe unmet precondition is:\npain object a",
            "llm_raw_response": "The above plan is invalid. The following action at step 1 has an unmet precondition:\novercome object a from object b\nThe unmet precondition is:\npain object a",
            "extracted_llm_plan": {
                "valid": false,
                "unmet_precondition": {
                    "action": "(overcome object a object b)\n",
                    "predicate": [
                        "pain_a"
                    ]
                }
            },
            "parsed_ground_truth_plan": {
                "valid": false,
                "unmet_precondition": {
                    "action": "(overcome object a object b)\n",
                    "predicate": [
                        "pain_a"
                    ]
                }
            },
            "llm_correct_binary": true,
            "llm_correct_w_type": true,
            "llm_correct_w_expl": true
        },
        {
            "instance_id": 54,
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Pain object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object a, harmony, planet object a, planet object c, province object b and province object c.\nMy goal is to have that object b craves object c. \nMy plan is as follows:\n\n[PLAN]\nfeast object b from object a\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid. This is the unmet goal condition:\nobject b craves object c\n[STATEMENT]\nAs initial conditions I have that, object c craves object a, harmony, planet object a, planet object b, province object b and province object c.\nMy goal is to have that object a craves object b. \nMy plan is as follows:\n\n[PLAN]\nfeast object c from object a\nsuccumb object c\nattack object a\novercome object a from object b\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is valid.\n\n[STATEMENT]\nAs initial conditions I have that, object c craves object a, harmony, planet object a, planet object b, province object b and province object c.\nMy goal is to have that object b craves object c. \nMy plan is as follows:\n\n[PLAN]\nattack object b\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid. This is the unmet goal condition:\nobject b craves object c\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, object b craves object a, harmony, planet object c and province object b.\nMy goal is to have that object a craves object b and object c craves object a. \nMy plan is as follows:\n\n[PLAN]\nfeast object a from object c\novercome object c from object a\nsuccumb object b\novercome object a from object b\nfeast object b from object a\n[PLAN END]\n\n[VERIFICATION]",
            "ground_truth_plan": "The above plan is invalid.The following action at step 1 has an unmet precondition:\nfeast object a from object c\nThe unmet precondition is:\nprovince object a",
            "llm_raw_response": "The above plan is valid.",
            "extracted_llm_plan": {
                "valid": true
            },
            "parsed_ground_truth_plan": {
                "valid": false,
                "unmet_precondition": {
                    "action": "(feast object a object c)\n",
                    "predicate": [
                        "province_a"
                    ]
                }
            },
            "llm_correct_binary": false,
            "llm_correct_w_type": false,
            "llm_correct_w_expl": false
        },
        {
            "instance_id": 55,
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Pain object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object c, object c craves object a, harmony, planet object a and province object b.\nMy goal is to have that object a craves object b and object c craves object a. \nMy plan is as follows:\n\n[PLAN]\novercome object a from object b\nfeast object b from object c\novercome object c from object a\nsuccumb object b\nattack object a\nfeast object c from object a\nsuccumb object c\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid.The following action at step 1 has an unmet precondition:\novercome object a from object b\nThe unmet precondition is:\npain object a\n[STATEMENT]\nAs initial conditions I have that, object b craves object c, object c craves object a, harmony, planet object a and province object b.\nMy goal is to have that object b craves object a and object c craves object b. \nMy plan is as follows:\n\n[PLAN]\nfeast object b from object c\nsuccumb object b\nfeast object c from object a\nsuccumb object c\nattack object b\novercome object b from object a\nattack object c\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid. This is the unmet goal condition:\nobject c craves object b\n[STATEMENT]\nAs initial conditions I have that, object c craves object a, harmony, planet object a, planet object b, province object b and province object c.\nMy goal is to have that object b craves object c and object c craves object a. \nMy plan is as follows:\n\n[PLAN]\nattack object b\novercome object b from object c\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is valid.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, harmony, planet object b, planet object c, province object a and province object b.\nMy goal is to have that object c craves object b. \nMy plan is as follows:\n\n[PLAN]\nfeast object a from object c\novercome object c from object b\nsuccumb object a\n[PLAN END]\n\n[VERIFICATION]",
            "ground_truth_plan": "The above plan is invalid.The following action at step 2 has an unmet precondition:\novercome object c from object b\nThe unmet precondition is:\npain object c",
            "llm_raw_response": "The above plan is valid.",
            "extracted_llm_plan": {
                "valid": true
            },
            "parsed_ground_truth_plan": {
                "valid": false,
                "unmet_precondition": {
                    "action": "(overcome object c object b)\n",
                    "predicate": [
                        "pain_c"
                    ]
                }
            },
            "llm_correct_binary": false,
            "llm_correct_w_type": false,
            "llm_correct_w_expl": false
        },
        {
            "instance_id": 56,
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Pain object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, object c craves object b, harmony, planet object b and province object a.\nMy goal is to have that object a craves object b. \nMy plan is as follows:\n\n[PLAN]\nfeast object a from object c\nsuccumb object a\nfeast object c from object b\nsuccumb object c\nattack object a\novercome object a from object b\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is valid.\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object a, object c craves object b, harmony, planet object a and province object c.\nMy goal is to have that object a craves object b. \nMy plan is as follows:\n\n[PLAN]\nsuccumb object c\novercome object a from object b\nfeast object c from object b\nfeast object b from object a\nattack object a\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid.The following action at step 1 has an unmet precondition:\nsuccumb object c\nThe unmet precondition is:\npain object c\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, harmony, planet object b, planet object c, province object a and province object b.\nMy goal is to have that object c craves object b. \nMy plan is as follows:\n\n[PLAN]\nfeast object a from object c\nsuccumb object a\nattack object c\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid. This is the unmet goal condition:\nobject c craves object b\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, object b craves object a, harmony, planet object c and province object b.\nMy goal is to have that object a craves object b. \nMy plan is as follows:\n\n[PLAN]\nsuccumb object b\nfeast object b from object a\novercome object a from object b\n[PLAN END]\n\n[VERIFICATION]",
            "ground_truth_plan": "The above plan is invalid.The following action at step 1 has an unmet precondition:\nsuccumb object b\nThe unmet precondition is:\npain object b",
            "llm_raw_response": "The above plan is invalid. The following action at step 1 has an unmet precondition:\nsuccumb object b\nThe unmet precondition is:\npain object b",
            "extracted_llm_plan": {
                "valid": false,
                "unmet_precondition": {
                    "action": "(succumb object b)\n",
                    "predicate": [
                        "pain_b"
                    ]
                }
            },
            "parsed_ground_truth_plan": {
                "valid": false,
                "unmet_precondition": {
                    "action": "(succumb object b)\n",
                    "predicate": [
                        "pain_b"
                    ]
                }
            },
            "llm_correct_binary": true,
            "llm_correct_w_type": true,
            "llm_correct_w_expl": true
        },
        {
            "instance_id": 57,
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Pain object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object a, harmony, planet object a, planet object c, province object b and province object c.\nMy goal is to have that object a craves object b. \nMy plan is as follows:\n\n[PLAN]\nfeast object b from object a\nsuccumb object b\nattack object a\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid. This is the unmet goal condition:\nobject a craves object b\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, harmony, planet object b, planet object c, province object a and province object c.\nMy goal is to have that object b craves object a. \nMy plan is as follows:\n\n[PLAN]\nfeast object a from object b\nsuccumb object a\nattack object b\novercome object b from object a\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is valid.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, object b craves object a, harmony, planet object c and province object b.\nMy goal is to have that object a craves object b and object c craves object a. \nMy plan is as follows:\n\n[PLAN]\nsuccumb object b\novercome object c from object a\nfeast object b from object a\novercome object a from object b\nattack object c\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid.The following action at step 1 has an unmet precondition:\nsuccumb object b\nThe unmet precondition is:\npain object b\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, object b craves object a, harmony, planet object c and province object b.\nMy goal is to have that object a craves object b and object b craves object c. \nMy plan is as follows:\n\n[PLAN]\novercome object a from object b\nattack object a\novercome object b from object c\nsuccumb object b\nfeast object b from object a\nsuccumb object a\nattack object b\n[PLAN END]\n\n[VERIFICATION]",
            "ground_truth_plan": "The above plan is invalid.The following action at step 1 has an unmet precondition:\novercome object a from object b\nThe unmet precondition is:\npain object a",
            "llm_raw_response": "The above plan is valid.",
            "extracted_llm_plan": {
                "valid": true
            },
            "parsed_ground_truth_plan": {
                "valid": false,
                "unmet_precondition": {
                    "action": "(overcome object a object b)\n",
                    "predicate": [
                        "pain_a"
                    ]
                }
            },
            "llm_correct_binary": false,
            "llm_correct_w_type": false,
            "llm_correct_w_expl": false
        },
        {
            "instance_id": 58,
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Pain object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object c craves object b, harmony, planet object a, planet object b, province object a and province object c.\nMy goal is to have that object a craves object b. \nMy plan is as follows:\n\n[PLAN]\nfeast object c from object b\nsuccumb object c\nattack object a\novercome object a from object b\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is valid.\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object c, harmony, planet object a, planet object c, province object a and province object b.\nMy goal is to have that object a craves object c and object b craves object a. \nMy plan is as follows:\n\n[PLAN]\nfeast object b from object c\nsuccumb object b\nattack object a\novercome object a from object c\nattack object b\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid. This is the unmet goal condition:\nobject b craves object a\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, object c craves object a, harmony, planet object b and province object c.\nMy goal is to have that object b craves object c. \nMy plan is as follows:\n\n[PLAN]\novercome object b from object c\nsuccumb object c\nattack object b\nfeast object c from object a\nfeast object a from object b\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid.The following action at step 1 has an unmet precondition:\novercome object b from object c\nThe unmet precondition is:\npain object b\n[STATEMENT]\nAs initial conditions I have that, object b craves object a, harmony, planet object a, planet object c, province object b and province object c.\nMy goal is to have that object c craves object a. \nMy plan is as follows:\n\n[PLAN]\nattack object c\nfeast object b from object a\novercome object c from object a\n[PLAN END]\n\n[VERIFICATION]",
            "ground_truth_plan": "The above plan is invalid.The following action at step 2 has an unmet precondition:\nfeast object b from object a\nThe unmet precondition is:\nharmony",
            "llm_raw_response": "The above plan is invalid. The following action at step 2 has an unmet precondition:\nfeast object b from object a\nThe unmet precondition is:\nobject craves other object\nIn this case, object b should crave object a.",
            "extracted_llm_plan": {
                "valid": false,
                "unmet_precondition": {
                    "action": "(feast object b object a)\n",
                    "predicate": [
                        "craves_c"
                    ]
                }
            },
            "parsed_ground_truth_plan": {
                "valid": false,
                "unmet_precondition": {
                    "action": "(feast object b object a)\n",
                    "predicate": [
                        "harmony_"
                    ]
                }
            },
            "llm_correct_binary": true,
            "llm_correct_w_type": true,
            "llm_correct_w_expl": false
        },
        {
            "instance_id": 59,
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Pain object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object a, harmony, planet object a, planet object c, province object b and province object c.\nMy goal is to have that object a craves object b and object c craves object a. \nMy plan is as follows:\n\n[PLAN]\nfeast object b from object a\nsuccumb object b\nattack object a\nattack object c\novercome object c from object a\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid.The following action at step 4 has an unmet precondition:\nattack object c\nThe unmet precondition is:\nharmony\n[STATEMENT]\nAs initial conditions I have that, object b craves object c, object c craves object a, harmony, planet object a and province object b.\nMy goal is to have that object a craves object b. \nMy plan is as follows:\n\n[PLAN]\nfeast object b from object c\nsuccumb object b\nfeast object c from object a\nsuccumb object c\nattack object a\novercome object a from object b\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is valid.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, harmony, planet object b, planet object c, province object a and province object c.\nMy goal is to have that object b craves object c and object c craves object a. \nMy plan is as follows:\n\n[PLAN]\nfeast object a from object b\nsuccumb object a\nattack object c\novercome object c from object a\nattack object b\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid. This is the unmet goal condition:\nobject b craves object c\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, object b craves object a, harmony, planet object c and province object b.\nMy goal is to have that object c craves object a. \nMy plan is as follows:\n\n[PLAN]\nfeast object b from object a\nsuccumb object b\nfeast object a from object c\nsuccumb object a\nattack object c\novercome object c from object a\n[PLAN END]\n\n[VERIFICATION]",
            "ground_truth_plan": "The above plan is valid.\n",
            "llm_raw_response": "The above plan is valid.",
            "extracted_llm_plan": {
                "valid": true
            },
            "parsed_ground_truth_plan": {
                "valid": true
            },
            "llm_correct_binary": true,
            "llm_correct_w_type": true,
            "llm_correct_w_expl": true
        },
        {
            "instance_id": 60,
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Pain object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, harmony, planet object b, planet object c, province object a and province object b.\nMy goal is to have that object a craves object c and object b craves object a. \nMy plan is as follows:\n\n[PLAN]\nattack object b\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid. This is the unmet goal condition:\nobject b craves object a\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, object b craves object c, harmony, planet object c and province object a.\nMy goal is to have that object a craves object c. \nMy plan is as follows:\n\n[PLAN]\nfeast object a from object b\nsuccumb object a\nfeast object b from object c\nsuccumb object b\nattack object a\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid. This is the unmet goal condition:\nobject a craves object c\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, object c craves object a, harmony, planet object b and province object c.\nMy goal is to have that object b craves object a and object c craves object b. \nMy plan is as follows:\n\n[PLAN]\nfeast object c from object a\nsuccumb object c\nfeast object a from object b\nsuccumb object a\nattack object b\novercome object b from object a\nattack object c\novercome object c from object b\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is valid.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, harmony, planet object b, planet object c, province object a and province object b.\nMy goal is to have that object a craves object b and object c craves object a. \nMy plan is as follows:\n\n[PLAN]\nfeast object a from object c\novercome object a from object b\nattack object c\n[PLAN END]\n\n[VERIFICATION]",
            "ground_truth_plan": "The above plan is invalid. This is the unmet goal condition:\nobject c craves object a",
            "llm_raw_response": "The above plan is invalid. This is the unmet goal condition:\nobject c craves object a",
            "extracted_llm_plan": {
                "valid": false,
                "unmet_goal": [
                    "craves_a"
                ]
            },
            "parsed_ground_truth_plan": {
                "valid": false,
                "unmet_goal": [
                    "craves_a"
                ]
            },
            "llm_correct_binary": true,
            "llm_correct_w_type": true,
            "llm_correct_w_expl": true
        },
        {
            "instance_id": 61,
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Pain object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object c craves object a, harmony, planet object a, planet object b, province object b and province object c.\nMy goal is to have that object b craves object c. \nMy plan is as follows:\n\n[PLAN]\nattack object b\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid. This is the unmet goal condition:\nobject b craves object c\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, harmony, planet object b, planet object c, province object a and province object b.\nMy goal is to have that object a craves object b. \nMy plan is as follows:\n\n[PLAN]\nfeast object a from object c\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid. This is the unmet goal condition:\nobject a craves object b\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, harmony, planet object b, planet object c, province object a and province object b.\nMy goal is to have that object a craves object b and object b craves object c. \nMy plan is as follows:\n\n[PLAN]\nfeast object a from object c\nsuccumb object a\nattack object b\novercome object b from object c\nattack object a\novercome object a from object b\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is valid.\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object c, harmony, planet object a, planet object c, province object a and province object b.\nMy goal is to have that object a craves object b and object c craves object a. \nMy plan is as follows:\n\n[PLAN]\nfeast object b from object c\nsuccumb object b\nattack object a\novercome object a from object b\nattack object c\novercome object c from object a\n[PLAN END]\n\n[VERIFICATION]",
            "ground_truth_plan": "The above plan is valid.\n",
            "llm_raw_response": "The above plan is valid.",
            "extracted_llm_plan": {
                "valid": true
            },
            "parsed_ground_truth_plan": {
                "valid": true
            },
            "llm_correct_binary": true,
            "llm_correct_w_type": true,
            "llm_correct_w_expl": true
        },
        {
            "instance_id": 62,
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Pain object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, object b craves object a, harmony, planet object c and province object b.\nMy goal is to have that object b craves object c. \nMy plan is as follows:\n\n[PLAN]\nfeast object b from object a\nsuccumb object a\nattack object b\novercome object b from object c\nfeast object a from object c\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid.The following action at step 2 has an unmet precondition:\nsuccumb object a\nThe unmet precondition is:\npain object a\n[STATEMENT]\nAs initial conditions I have that, object b craves object a, harmony, planet object a, planet object c, province object b and province object c.\nMy goal is to have that object a craves object c and object b craves object a. \nMy plan is as follows:\n\n[PLAN]\nfeast object b from object a\nsuccumb object b\nattack object a\novercome object a from object c\nattack object b\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid. This is the unmet goal condition:\nobject b craves object a\n[STATEMENT]\nAs initial conditions I have that, object b craves object a, object c craves object b, harmony, planet object a and province object c.\nMy goal is to have that object a craves object b and object c craves object a. \nMy plan is as follows:\n\n[PLAN]\nfeast object c from object b\nsuccumb object c\nfeast object b from object a\nsuccumb object b\nattack object a\novercome object a from object b\nattack object c\novercome object c from object a\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is valid.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, harmony, planet object b, planet object c, province object a and province object c.\nMy goal is to have that object a craves object b and object b craves object c. \nMy plan is as follows:\n\n[PLAN]\nfeast object a from object b\nsuccumb object a\nattack object b\novercome object b from object c\nattack object a\n[PLAN END]\n\n[VERIFICATION]",
            "ground_truth_plan": "The above plan is invalid. This is the unmet goal condition:\nobject a craves object b",
            "llm_raw_response": "The above plan is invalid. This is the unmet goal condition:\nobject b craves object c",
            "extracted_llm_plan": {
                "valid": false,
                "unmet_goal": [
                    "craves_b"
                ]
            },
            "parsed_ground_truth_plan": {
                "valid": false,
                "unmet_goal": [
                    "craves_a"
                ]
            },
            "llm_correct_binary": true,
            "llm_correct_w_type": true,
            "llm_correct_w_expl": false
        },
        {
            "instance_id": 63,
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Pain object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object a, harmony, planet object a, planet object c, province object b and province object c.\nMy goal is to have that object a craves object b and object c craves object a. \nMy plan is as follows:\n\n[PLAN]\nfeast object b from object a\nsuccumb object b\nattack object a\novercome object a from object b\nattack object c\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid. This is the unmet goal condition:\nobject c craves object a\n[STATEMENT]\nAs initial conditions I have that, object c craves object b, harmony, planet object a, planet object b, province object a and province object c.\nMy goal is to have that object b craves object a and object c craves object b. \nMy plan is as follows:\n\n[PLAN]\novercome object b from object a\novercome object c from object b\nsuccumb object c\nattack object b\nfeast object c from object b\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid.The following action at step 1 has an unmet precondition:\novercome object b from object a\nThe unmet precondition is:\npain object b\n[STATEMENT]\nAs initial conditions I have that, object b craves object a, object c craves object b, harmony, planet object a and province object c.\nMy goal is to have that object c craves object a. \nMy plan is as follows:\n\n[PLAN]\nfeast object c from object b\nsuccumb object c\nfeast object b from object a\nsuccumb object b\nattack object c\novercome object c from object a\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is valid.\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object a, harmony, planet object a, planet object c, province object b and province object c.\nMy goal is to have that object a craves object c and object c craves object b. \nMy plan is as follows:\n\n[PLAN]\nfeast object b from object a\nsuccumb object b\nattack object c\novercome object c from object b\nattack object a\novercome object a from object c\n[PLAN END]\n\n[VERIFICATION]",
            "ground_truth_plan": "The above plan is valid.\n",
            "llm_raw_response": "The above plan is valid.",
            "extracted_llm_plan": {
                "valid": true
            },
            "parsed_ground_truth_plan": {
                "valid": true
            },
            "llm_correct_binary": true,
            "llm_correct_w_type": true,
            "llm_correct_w_expl": true
        },
        {
            "instance_id": 64,
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Pain object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object c, harmony, planet object a, planet object c, province object a and province object b.\nMy goal is to have that object b craves object a. \nMy plan is as follows:\n\n[PLAN]\nfeast object b from object c\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid. This is the unmet goal condition:\nobject b craves object a\n[STATEMENT]\nAs initial conditions I have that, object b craves object c, harmony, planet object a, planet object c, province object a and province object b.\nMy goal is to have that object a craves object b and object c craves object a. \nMy plan is as follows:\n\n[PLAN]\nfeast object b from object c\nsuccumb object b\nattack object a\novercome object a from object b\nattack object c\novercome object c from object a\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is valid.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, object c craves object a, harmony, planet object b and province object c.\nMy goal is to have that object a craves object c and object c craves object b. \nMy plan is as follows:\n\n[PLAN]\novercome object c from object b\nfeast object c from object a\nfeast object a from object b\nattack object c\nsuccumb object a\novercome object a from object c\nsuccumb object c\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid. The following action at step 1 has unmet preconditions:\novercome object c from object b\nThe unmet preconditions are:\npain object c and province object b\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, harmony, planet object b, planet object c, province object a and province object b.\nMy goal is to have that object b craves object c and object c craves object a. \nMy plan is as follows:\n\n[PLAN]\nfeast object a from object c\nsuccumb object a\nattack object c\novercome object c from object a\nattack object b\novercome object b from object c\n[PLAN END]\n\n[VERIFICATION]",
            "ground_truth_plan": "The above plan is valid.\n",
            "llm_raw_response": "The above plan is valid.",
            "extracted_llm_plan": {
                "valid": true
            },
            "parsed_ground_truth_plan": {
                "valid": true
            },
            "llm_correct_binary": true,
            "llm_correct_w_type": true,
            "llm_correct_w_expl": true
        },
        {
            "instance_id": 65,
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Pain object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, harmony, planet object b, planet object c, province object a and province object c.\nMy goal is to have that object c craves object b. \nMy plan is as follows:\n\n[PLAN]\nfeast object a from object b\nsuccumb object a\nattack object c\novercome object c from object b\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is valid.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, object c craves object a, harmony, planet object b and province object c.\nMy goal is to have that object c craves object b. \nMy plan is as follows:\n\n[PLAN]\nfeast object c from object a\nsuccumb object c\nfeast object a from object b\nsuccumb object a\nattack object c\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid. This is the unmet goal condition:\nobject c craves object b\n[STATEMENT]\nAs initial conditions I have that, object b craves object a, harmony, planet object a, planet object c, province object b and province object c.\nMy goal is to have that object b craves object a and object c craves object b. \nMy plan is as follows:\n\n[PLAN]\nattack object c\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid. This is the unmet goal condition:\nobject c craves object b\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, harmony, planet object b, planet object c, province object a and province object b.\nMy goal is to have that object b craves object a and object c craves object b. \nMy plan is as follows:\n\n[PLAN]\nfeast object a from object c\nsuccumb object a\nattack object b\novercome object b from object a\nattack object c\n[PLAN END]\n\n[VERIFICATION]",
            "ground_truth_plan": "The above plan is invalid. This is the unmet goal condition:\nobject c craves object b",
            "llm_raw_response": "The above plan is invalid. This is the unmet goal condition:\nobject c craves object b",
            "extracted_llm_plan": {
                "valid": false,
                "unmet_goal": [
                    "craves_b"
                ]
            },
            "parsed_ground_truth_plan": {
                "valid": false,
                "unmet_goal": [
                    "craves_b"
                ]
            },
            "llm_correct_binary": true,
            "llm_correct_w_type": true,
            "llm_correct_w_expl": true
        },
        {
            "instance_id": 66,
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Pain object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, harmony, planet object b, planet object c, province object a and province object c.\nMy goal is to have that object b craves object a. \nMy plan is as follows:\n\n[PLAN]\nfeast object a from object b\nsuccumb object a\nattack object b\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid. This is the unmet goal condition:\nobject b craves object a\n[STATEMENT]\nAs initial conditions I have that, object b craves object a, harmony, planet object a, planet object c, province object b and province object c.\nMy goal is to have that object b craves object c and object c craves object a. \nMy plan is as follows:\n\n[PLAN]\nfeast object b from object a\nsuccumb object b\nattack object c\novercome object c from object a\nattack object b\novercome object b from object c\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is valid.\n\n[STATEMENT]\nAs initial conditions I have that, harmony, planet object a, planet object b, planet object c, province object a, province object b and province object c.\nMy goal is to have that object c craves object a. \nMy plan is as follows:\n\n[PLAN]\nattack object c\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid. This is the unmet goal condition:\nobject c craves object a\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, object b craves object c, harmony, planet object c and province object a.\nMy goal is to have that object a craves object c and object b craves object a. \nMy plan is as follows:\n\n[PLAN]\nfeast object a from object b\nsuccumb object a\nfeast object b from object c\nsuccumb object b\nattack object a\novercome object a from object c\nattack object b\novercome object b from object a\n[PLAN END]\n\n[VERIFICATION]",
            "ground_truth_plan": "The above plan is valid.\n",
            "llm_raw_response": "The above plan is valid.",
            "extracted_llm_plan": {
                "valid": true
            },
            "parsed_ground_truth_plan": {
                "valid": true
            },
            "llm_correct_binary": true,
            "llm_correct_w_type": true,
            "llm_correct_w_expl": true
        },
        {
            "instance_id": 67,
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Pain object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object c, harmony, planet object a, planet object c, province object a and province object b.\nMy goal is to have that object b craves object c and object c craves object a. \nMy plan is as follows:\n\n[PLAN]\nfeast object b from object c\nsuccumb object b\nattack object c\novercome object c from object a\nattack object b\novercome object b from object c\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is valid.\n\n[STATEMENT]\nAs initial conditions I have that, object c craves object a, harmony, planet object a, planet object b, province object b and province object c.\nMy goal is to have that object b craves object a. \nMy plan is as follows:\n\n[PLAN]\nfeast object c from object a\nsuccumb object c\nattack object b\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid. This is the unmet goal condition:\nobject b craves object a\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, harmony, planet object b, planet object c, province object a and province object c.\nMy goal is to have that object a craves object c and object b craves object a. \nMy plan is as follows:\n\n[PLAN]\nattack object b\nfeast object a from object b\novercome object b from object a\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid.The following action at step 1 has an unmet precondition:\nattack object b\nThe unmet precondition is:\nprovince object b\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, harmony, planet object b, planet object c, province object a and province object b.\nMy goal is to have that object b craves object c. \nMy plan is as follows:\n\n[PLAN]\nfeast object a from object c\nsuccumb object a\nattack object b\novercome object b from object c\n[PLAN END]\n\n[VERIFICATION]",
            "ground_truth_plan": "The above plan is valid.\n",
            "llm_raw_response": "The above plan is valid.",
            "extracted_llm_plan": {
                "valid": true
            },
            "parsed_ground_truth_plan": {
                "valid": true
            },
            "llm_correct_binary": true,
            "llm_correct_w_type": true,
            "llm_correct_w_expl": true
        },
        {
            "instance_id": 68,
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Pain object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object c, object c craves object a, harmony, planet object a and province object b.\nMy goal is to have that object a craves object b. \nMy plan is as follows:\n\n[PLAN]\nfeast object b from object c\nsuccumb object c\novercome object a from object b\nsuccumb object b\nattack object a\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid.The following action at step 2 has an unmet precondition:\nsuccumb object c\nThe unmet precondition is:\npain object c\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, object b craves object a, harmony, planet object c and province object b.\nMy goal is to have that object a craves object b and object b craves object c. \nMy plan is as follows:\n\n[PLAN]\nfeast object b from object a\nsuccumb object b\nfeast object a from object c\nsuccumb object a\nattack object b\novercome object b from object c\nattack object a\novercome object a from object b\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is valid.\n\n[STATEMENT]\nAs initial conditions I have that, harmony, planet object a, planet object b, planet object c, province object a, province object b and province object c.\nMy goal is to have that object c craves object a. \nMy plan is as follows:\n\n[PLAN]\nattack object c\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid. This is the unmet goal condition:\nobject c craves object a\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, harmony, planet object b, planet object c, province object a and province object c.\nMy goal is to have that object a craves object c and object c craves object b. \nMy plan is as follows:\n\n[PLAN]\nfeast object a from object b\nsuccumb object a\nattack object c\novercome object c from object b\nattack object a\n[PLAN END]\n\n[VERIFICATION]",
            "ground_truth_plan": "The above plan is invalid. This is the unmet goal condition:\nobject a craves object c",
            "llm_raw_response": "The above plan is valid.",
            "extracted_llm_plan": {
                "valid": true
            },
            "parsed_ground_truth_plan": {
                "valid": false,
                "unmet_goal": [
                    "craves_a"
                ]
            },
            "llm_correct_binary": false,
            "llm_correct_w_type": false,
            "llm_correct_w_expl": false
        },
        {
            "instance_id": 69,
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Pain object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, object c craves object a, harmony, planet object b and province object c.\nMy goal is to have that object a craves object c and object b craves object a. \nMy plan is as follows:\n\n[PLAN]\nfeast object c from object a\nsuccumb object c\nfeast object a from object b\novercome object a from object c\nattack object b\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid. This is the unmet goal condition:\nobject b craves object a\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, harmony, planet object b, planet object c, province object a and province object c.\nMy goal is to have that object c craves object b. \nMy plan is as follows:\n\n[PLAN]\nfeast object a from object b\nsuccumb object a\nattack object c\novercome object c from object b\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is valid.\n\n[STATEMENT]\nAs initial conditions I have that, object c craves object a, harmony, planet object a, planet object b, province object b and province object c.\nMy goal is to have that object a craves object b. \nMy plan is as follows:\n\n[PLAN]\nattack object a\novercome object a from object b\nfeast object c from object a\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid.The following action at step 1 has an unmet precondition:\nattack object a\nThe unmet precondition is:\nprovince object a\n[STATEMENT]\nAs initial conditions I have that, object b craves object c, harmony, planet object a, planet object c, province object a and province object b.\nMy goal is to have that object b craves object c and object c craves object a. \nMy plan is as follows:\n\n[PLAN]\nfeast object b from object c\nsuccumb object b\nattack object c\novercome object c from object a\nattack object b\n[PLAN END]\n\n[VERIFICATION]",
            "ground_truth_plan": "The above plan is invalid. This is the unmet goal condition:\nobject b craves object c",
            "llm_raw_response": "The above plan is invalid. This is the unmet goal condition:\nobject c craves object a",
            "extracted_llm_plan": {
                "valid": false,
                "unmet_goal": [
                    "craves_a"
                ]
            },
            "parsed_ground_truth_plan": {
                "valid": false,
                "unmet_goal": [
                    "craves_b"
                ]
            },
            "llm_correct_binary": true,
            "llm_correct_w_type": true,
            "llm_correct_w_expl": false
        },
        {
            "instance_id": 70,
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Pain object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object c craves object b, harmony, planet object a, planet object b, province object a and province object c.\nMy goal is to have that object b craves object a and object c craves object b. \nMy plan is as follows:\n\n[PLAN]\nattack object c\nfeast object c from object b\novercome object c from object b\nsuccumb object c\novercome object b from object a\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid.The following action at step 1 has an unmet precondition:\nattack object c\nThe unmet precondition is:\nplanet object c\n[STATEMENT]\nAs initial conditions I have that, object c craves object a, harmony, planet object a, planet object b, province object b and province object c.\nMy goal is to have that object b craves object c. \nMy plan is as follows:\n\n[PLAN]\nattack object b\novercome object b from object c\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is valid.\n\n[STATEMENT]\nAs initial conditions I have that, object c craves object b, harmony, planet object a, planet object b, province object a and province object c.\nMy goal is to have that object b craves object c. \nMy plan is as follows:\n\n[PLAN]\nfeast object c from object b\nsuccumb object c\nattack object b\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid. This is the unmet goal condition:\nobject b craves object c\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, harmony, planet object b, planet object c, province object a and province object c.\nMy goal is to have that object b craves object c. \nMy plan is as follows:\n\n[PLAN]\nsuccumb object a\nfeast object a from object b\novercome object b from object c\n[PLAN END]\n\n[VERIFICATION]",
            "ground_truth_plan": "The above plan is invalid.The following action at step 1 has an unmet precondition:\nsuccumb object a\nThe unmet precondition is:\npain object a",
            "llm_raw_response": "The above plan is invalid. The following action at step 1 has an unmet precondition:\nsuccumb object a\nThe unmet precondition is:\nPain object",
            "extracted_llm_plan": {
                "valid": false,
                "unmet_precondition": {
                    "action": "(succumb object a)\n",
                    "predicate": []
                }
            },
            "parsed_ground_truth_plan": {
                "valid": false,
                "unmet_precondition": {
                    "action": "(succumb object a)\n",
                    "predicate": [
                        "pain_a"
                    ]
                }
            },
            "llm_correct_binary": true,
            "llm_correct_w_type": true,
            "llm_correct_w_expl": false
        },
        {
            "instance_id": 71,
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Pain object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object c, harmony, planet object a, planet object c, province object a and province object b.\nMy goal is to have that object b craves object a. \nMy plan is as follows:\n\n[PLAN]\nfeast object b from object c\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid. This is the unmet goal condition:\nobject b craves object a\n[STATEMENT]\nAs initial conditions I have that, object b craves object a, harmony, planet object a, planet object c, province object b and province object c.\nMy goal is to have that object b craves object c. \nMy plan is as follows:\n\n[PLAN]\nfeast object b from object a\novercome object b from object c\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is valid.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, harmony, planet object b, planet object c, province object a and province object c.\nMy goal is to have that object a craves object b and object b craves object c. \nMy plan is as follows:\n\n[PLAN]\nattack object b\nfeast object a from object b\novercome object a from object b\novercome object b from object c\nsuccumb object a\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid.The following action at step 1 has an unmet precondition:\nattack object b\nThe unmet precondition is:\nprovince object b\n[STATEMENT]\nAs initial conditions I have that, object c craves object a, harmony, planet object a, planet object b, province object b and province object c.\nMy goal is to have that object b craves object a. \nMy plan is as follows:\n\n[PLAN]\nfeast object c from object a\novercome object b from object a\nattack object b\n[PLAN END]\n\n[VERIFICATION]",
            "ground_truth_plan": "The above plan is invalid.The following action at step 2 has an unmet precondition:\novercome object b from object a\nThe unmet precondition is:\npain object b",
            "llm_raw_response": "The above plan is invalid. The following action at step 3 has an unmet precondition:\nattack object b\nThe unmet precondition is:\nplanet object b",
            "extracted_llm_plan": {
                "valid": false,
                "unmet_precondition": {
                    "action": "(attack object b)\n",
                    "predicate": [
                        "planet_b"
                    ]
                }
            },
            "parsed_ground_truth_plan": {
                "valid": false,
                "unmet_precondition": {
                    "action": "(overcome object b object a)\n",
                    "predicate": [
                        "pain_b"
                    ]
                }
            },
            "llm_correct_binary": true,
            "llm_correct_w_type": true,
            "llm_correct_w_expl": false
        },
        {
            "instance_id": 72,
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Pain object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, object c craves object a, harmony, planet object b and province object c.\nMy goal is to have that object b craves object c. \nMy plan is as follows:\n\n[PLAN]\nfeast object c from object a\nsuccumb object c\nfeast object a from object b\nsuccumb object a\nattack object b\novercome object b from object c\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is valid.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, harmony, planet object b, planet object c, province object a and province object b.\nMy goal is to have that object b craves object c and object c craves object a. \nMy plan is as follows:\n\n[PLAN]\novercome object b from object c\nattack object c\novercome object c from object a\nattack object b\nfeast object a from object c\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid. The following action at step 1 has unmet preconditions:\novercome object b from object c\nThe unmet preconditions are:\npain object b and province object c\n[STATEMENT]\nAs initial conditions I have that, harmony, planet object a, planet object b, planet object c, province object a, province object b and province object c.\nMy goal is to have that object b craves object a. \nMy plan is as follows:\n\n[PLAN]\nattack object b\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid. This is the unmet goal condition:\nobject b craves object a\n[STATEMENT]\nAs initial conditions I have that, object b craves object c, object c craves object a, harmony, planet object a and province object b.\nMy goal is to have that object a craves object b. \nMy plan is as follows:\n\n[PLAN]\nfeast object b from object c\nsuccumb object b\nfeast object c from object a\nsuccumb object c\nattack object a\novercome object a from object b\n[PLAN END]\n\n[VERIFICATION]",
            "ground_truth_plan": "The above plan is valid.\n",
            "llm_raw_response": "The above plan is valid.",
            "extracted_llm_plan": {
                "valid": true
            },
            "parsed_ground_truth_plan": {
                "valid": true
            },
            "llm_correct_binary": true,
            "llm_correct_w_type": true,
            "llm_correct_w_expl": true
        },
        {
            "instance_id": 73,
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Pain object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, object b craves object a, harmony, planet object c and province object b.\nMy goal is to have that object a craves object b and object c craves object a. \nMy plan is as follows:\n\n[PLAN]\novercome object c from object a\nfeast object b from object a\nsuccumb object b\novercome object a from object b\nattack object c\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid. The following action at step 1 has unmet preconditions:\novercome object c from object a\nThe unmet preconditions are:\npain object c and province object a\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, harmony, planet object b, planet object c, province object a and province object c.\nMy goal is to have that object b craves object a and object c craves object b. \nMy plan is as follows:\n\n[PLAN]\nfeast object a from object b\nsuccumb object a\nattack object b\novercome object b from object a\nattack object c\novercome object c from object b\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is valid.\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object a, harmony, planet object a, planet object c, province object b and province object c.\nMy goal is to have that object c craves object a. \nMy plan is as follows:\n\n[PLAN]\nfeast object b from object a\nsuccumb object b\nattack object c\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid. This is the unmet goal condition:\nobject c craves object a\n[STATEMENT]\nAs initial conditions I have that, object c craves object a, harmony, planet object a, planet object b, province object b and province object c.\nMy goal is to have that object b craves object c. \nMy plan is as follows:\n\n[PLAN]\nattack object b\n[PLAN END]\n\n[VERIFICATION]",
            "ground_truth_plan": "The above plan is invalid. This is the unmet goal condition:\nobject b craves object c",
            "llm_raw_response": "The above plan is invalid. The following action at step 1 has unmet preconditions:\nattack object b\nThe unmet preconditions are:\nProvince object b, Planet object b, Harmony",
            "extracted_llm_plan": {
                "valid": false,
                "unmet_precondition": {
                    "action": "(attack object b)\n",
                    "predicate": []
                }
            },
            "parsed_ground_truth_plan": {
                "valid": false,
                "unmet_goal": [
                    "craves_b"
                ]
            },
            "llm_correct_binary": true,
            "llm_correct_w_type": false,
            "llm_correct_w_expl": false
        },
        {
            "instance_id": 74,
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Pain object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, harmony, planet object b, planet object c, province object a and province object c.\nMy goal is to have that object b craves object c. \nMy plan is as follows:\n\n[PLAN]\nfeast object a from object b\nsuccumb object a\nattack object b\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid. This is the unmet goal condition:\nobject b craves object c\n[STATEMENT]\nAs initial conditions I have that, harmony, planet object a, planet object b, planet object c, province object a, province object b and province object c.\nMy goal is to have that object b craves object a. \nMy plan is as follows:\n\n[PLAN]\nattack object b\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid. This is the unmet goal condition:\nobject b craves object a\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, harmony, planet object b, planet object c, province object a and province object b.\nMy goal is to have that object b craves object a and object c craves object b. \nMy plan is as follows:\n\n[PLAN]\nfeast object a from object c\nsuccumb object a\nattack object b\novercome object b from object a\nattack object c\novercome object c from object b\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is valid.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, object c craves object b, harmony, planet object b and province object a.\nMy goal is to have that object c craves object a. \nMy plan is as follows:\n\n[PLAN]\nfeast object a from object c\nsuccumb object a\nfeast object c from object b\n[PLAN END]\n\n[VERIFICATION]",
            "ground_truth_plan": "The above plan is invalid. This is the unmet goal condition:\nobject c craves object a",
            "llm_raw_response": "The above plan is invalid. This is the unmet goal condition:\nobject c craves object a",
            "extracted_llm_plan": {
                "valid": false,
                "unmet_goal": [
                    "craves_a"
                ]
            },
            "parsed_ground_truth_plan": {
                "valid": false,
                "unmet_goal": [
                    "craves_a"
                ]
            },
            "llm_correct_binary": true,
            "llm_correct_w_type": true,
            "llm_correct_w_expl": true
        },
        {
            "instance_id": 75,
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Pain object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object a, harmony, planet object a, planet object c, province object b and province object c.\nMy goal is to have that object a craves object c and object c craves object b. \nMy plan is as follows:\n\n[PLAN]\nfeast object b from object a\nsuccumb object b\nattack object c\novercome object c from object b\nattack object a\novercome object a from object c\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is valid.\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object c, harmony, planet object a, planet object c, province object a and province object b.\nMy goal is to have that object b craves object a and object c craves object b. \nMy plan is as follows:\n\n[PLAN]\nfeast object b from object c\novercome object b from object a\nattack object c\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid. This is the unmet goal condition:\nobject c craves object b\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, object b craves object c, harmony, planet object c and province object a.\nMy goal is to have that object a craves object c. \nMy plan is as follows:\n\n[PLAN]\nsuccumb object b\nattack object a\nfeast object a from object b\novercome object a from object c\nfeast object b from object c\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid.The following action at step 1 has an unmet precondition:\nsuccumb object b\nThe unmet precondition is:\npain object b\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, harmony, planet object b, planet object c, province object a and province object c.\nMy goal is to have that object b craves object a and object c craves object b. \nMy plan is as follows:\n\n[PLAN]\nfeast object a from object b\nsuccumb object a\nattack object b\novercome object b from object a\nattack object c\n[PLAN END]\n\n[VERIFICATION]",
            "ground_truth_plan": "The above plan is invalid. This is the unmet goal condition:\nobject c craves object b",
            "llm_raw_response": "The above plan is invalid. This is the unmet goal condition:\nobject c craves object b",
            "extracted_llm_plan": {
                "valid": false,
                "unmet_goal": [
                    "craves_b"
                ]
            },
            "parsed_ground_truth_plan": {
                "valid": false,
                "unmet_goal": [
                    "craves_b"
                ]
            },
            "llm_correct_binary": true,
            "llm_correct_w_type": true,
            "llm_correct_w_expl": true
        },
        {
            "instance_id": 76,
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Pain object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, object b craves object c, harmony, planet object c and province object a.\nMy goal is to have that object a craves object c. \nMy plan is as follows:\n\n[PLAN]\nfeast object a from object b\nsuccumb object a\nfeast object b from object c\nsuccumb object b\nattack object a\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid. This is the unmet goal condition:\nobject a craves object c\n[STATEMENT]\nAs initial conditions I have that, object b craves object c, object c craves object a, harmony, planet object a and province object b.\nMy goal is to have that object a craves object c and object c craves object b. \nMy plan is as follows:\n\n[PLAN]\nfeast object b from object c\nsuccumb object b\nfeast object c from object a\novercome object c from object b\nattack object a\novercome object a from object c\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is valid.\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object c, harmony, planet object a, planet object c, province object a and province object b.\nMy goal is to have that object b craves object a and object c craves object b. \nMy plan is as follows:\n\n[PLAN]\nattack object c\novercome object c from object b\nfeast object b from object c\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid.The following action at step 1 has an unmet precondition:\nattack object c\nThe unmet precondition is:\nprovince object c\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, object b craves object a, harmony, planet object c and province object b.\nMy goal is to have that object b craves object c. \nMy plan is as follows:\n\n[PLAN]\nfeast object b from object a\nsuccumb object b\nfeast object a from object c\nsuccumb object a\nattack object b\novercome object b from object c\n[PLAN END]\n\n[VERIFICATION]",
            "ground_truth_plan": "The above plan is valid.\n",
            "llm_raw_response": "The above plan is valid.",
            "extracted_llm_plan": {
                "valid": true
            },
            "parsed_ground_truth_plan": {
                "valid": true
            },
            "llm_correct_binary": true,
            "llm_correct_w_type": true,
            "llm_correct_w_expl": true
        },
        {
            "instance_id": 77,
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Pain object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, object b craves object a, harmony, planet object c and province object b.\nMy goal is to have that object a craves object b and object c craves object a. \nMy plan is as follows:\n\n[PLAN]\novercome object a from object b\nfeast object b from object a\nsuccumb object b\novercome object c from object a\nfeast object a from object c\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid.The following action at step 1 has an unmet precondition:\novercome object a from object b\nThe unmet precondition is:\npain object a\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, harmony, planet object b, planet object c, province object a and province object b.\nMy goal is to have that object c craves object b. \nMy plan is as follows:\n\n[PLAN]\nfeast object a from object c\nsuccumb object a\nattack object c\novercome object c from object b\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is valid.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, object c craves object b, harmony, planet object b and province object a.\nMy goal is to have that object b craves object c and object c craves object a. \nMy plan is as follows:\n\n[PLAN]\nfeast object a from object c\nsuccumb object a\nfeast object c from object b\novercome object c from object a\nattack object b\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid. This is the unmet goal condition:\nobject b craves object c\n[STATEMENT]\nAs initial conditions I have that, harmony, planet object a, planet object b, planet object c, province object a, province object b and province object c.\nMy goal is to have that object b craves object c. \nMy plan is as follows:\n\n[PLAN]\nattack object b\n[PLAN END]\n\n[VERIFICATION]",
            "ground_truth_plan": "The above plan is invalid. This is the unmet goal condition:\nobject b craves object c",
            "llm_raw_response": "The above plan is invalid. The following action at step 1 has an unmet precondition:\nattack object b\nThe unmet precondition is:\nProvince object, Planet object, Harmony.",
            "extracted_llm_plan": {
                "valid": false,
                "unmet_precondition": {
                    "action": "(attack object b)\n",
                    "predicate": []
                }
            },
            "parsed_ground_truth_plan": {
                "valid": false,
                "unmet_goal": [
                    "craves_b"
                ]
            },
            "llm_correct_binary": true,
            "llm_correct_w_type": false,
            "llm_correct_w_expl": false
        },
        {
            "instance_id": 78,
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Pain object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, harmony, planet object b, planet object c, province object a and province object b.\nMy goal is to have that object b craves object a and object c craves object b. \nMy plan is as follows:\n\n[PLAN]\nfeast object a from object c\nsuccumb object a\nattack object b\novercome object b from object a\nattack object c\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid. This is the unmet goal condition:\nobject c craves object b\n[STATEMENT]\nAs initial conditions I have that, object c craves object a, harmony, planet object a, planet object b, province object b and province object c.\nMy goal is to have that object a craves object c and object b craves object a. \nMy plan is as follows:\n\n[PLAN]\nfeast object c from object a\novercome object b from object a\novercome object a from object c\nsuccumb object c\nattack object b\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid.The following action at step 2 has an unmet precondition:\novercome object b from object a\nThe unmet precondition is:\npain object b\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, object c craves object a, harmony, planet object b and province object c.\nMy goal is to have that object a craves object c. \nMy plan is as follows:\n\n[PLAN]\nfeast object c from object a\nsuccumb object c\nfeast object a from object b\novercome object a from object c\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is valid.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, object c craves object a, harmony, planet object b and province object c.\nMy goal is to have that object b craves object c. \nMy plan is as follows:\n\n[PLAN]\nfeast object c from object a\nsuccumb object c\nfeast object a from object b\nsuccumb object a\nattack object b\novercome object b from object c\n[PLAN END]\n\n[VERIFICATION]",
            "ground_truth_plan": "The above plan is valid.\n",
            "llm_raw_response": "The above plan is valid.",
            "extracted_llm_plan": {
                "valid": true
            },
            "parsed_ground_truth_plan": {
                "valid": true
            },
            "llm_correct_binary": true,
            "llm_correct_w_type": true,
            "llm_correct_w_expl": true
        },
        {
            "instance_id": 79,
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Pain object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, harmony, planet object b, planet object c, province object a and province object b.\nMy goal is to have that object b craves object c. \nMy plan is as follows:\n\n[PLAN]\nsuccumb object a\nfeast object a from object c\novercome object b from object c\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid.The following action at step 1 has an unmet precondition:\nsuccumb object a\nThe unmet precondition is:\npain object a\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, object b craves object c, harmony, planet object c and province object a.\nMy goal is to have that object b craves object c and object c craves object a. \nMy plan is as follows:\n\n[PLAN]\nfeast object a from object b\nsuccumb object a\nfeast object b from object c\nsuccumb object b\nattack object c\novercome object c from object a\nattack object b\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid. This is the unmet goal condition:\nobject b craves object c\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, object c craves object b, harmony, planet object b and province object a.\nMy goal is to have that object b craves object a. \nMy plan is as follows:\n\n[PLAN]\nfeast object a from object c\nsuccumb object a\nfeast object c from object b\nsuccumb object c\nattack object b\novercome object b from object a\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is valid.\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object c, object c craves object a, harmony, planet object a and province object b.\nMy goal is to have that object a craves object c. \nMy plan is as follows:\n\n[PLAN]\nfeast object b from object c\nsuccumb object b\nfeast object c from object a\nsuccumb object c\nattack object a\n[PLAN END]\n\n[VERIFICATION]",
            "ground_truth_plan": "The above plan is invalid. This is the unmet goal condition:\nobject a craves object c",
            "llm_raw_response": "The above plan is invalid. This is the unmet goal condition:\nobject a craves object c",
            "extracted_llm_plan": {
                "valid": false,
                "unmet_goal": [
                    "craves_a"
                ]
            },
            "parsed_ground_truth_plan": {
                "valid": false,
                "unmet_goal": [
                    "craves_a"
                ]
            },
            "llm_correct_binary": true,
            "llm_correct_w_type": true,
            "llm_correct_w_expl": true
        },
        {
            "instance_id": 80,
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Pain object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object c craves object b, harmony, planet object a, planet object b, province object a and province object c.\nMy goal is to have that object b craves object c. \nMy plan is as follows:\n\n[PLAN]\nfeast object c from object b\novercome object b from object c\nattack object b\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid. The following action at step 2 has unmet preconditions:\novercome object b from object c\nThe unmet preconditions are:\npain object b and province object c\n[STATEMENT]\nAs initial conditions I have that, object b craves object c, harmony, planet object a, planet object c, province object a and province object b.\nMy goal is to have that object a craves object c and object b craves object a. \nMy plan is as follows:\n\n[PLAN]\nfeast object b from object c\nsuccumb object b\nattack object a\novercome object a from object c\nattack object b\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid. This is the unmet goal condition:\nobject b craves object a\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, harmony, planet object b, planet object c, province object a and province object c.\nMy goal is to have that object b craves object a. \nMy plan is as follows:\n\n[PLAN]\nfeast object a from object b\nsuccumb object a\nattack object b\novercome object b from object a\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is valid.\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object a, harmony, planet object a, planet object c, province object b and province object c.\nMy goal is to have that object a craves object c. \nMy plan is as follows:\n\n[PLAN]\nfeast object b from object a\nsuccumb object b\nattack object a\novercome object a from object c\n[PLAN END]\n\n[VERIFICATION]",
            "ground_truth_plan": "The above plan is valid.\n",
            "llm_raw_response": "The above plan is valid.",
            "extracted_llm_plan": {
                "valid": true
            },
            "parsed_ground_truth_plan": {
                "valid": true
            },
            "llm_correct_binary": true,
            "llm_correct_w_type": true,
            "llm_correct_w_expl": true
        },
        {
            "instance_id": 81,
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Pain object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object a, harmony, planet object a, planet object c, province object b and province object c.\nMy goal is to have that object c craves object a. \nMy plan is as follows:\n\n[PLAN]\nfeast object b from object a\nsuccumb object b\nattack object c\novercome object c from object a\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is valid.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, harmony, planet object b, planet object c, province object a and province object b.\nMy goal is to have that object a craves object b. \nMy plan is as follows:\n\n[PLAN]\nfeast object a from object c\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid. This is the unmet goal condition:\nobject a craves object b\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, harmony, planet object b, planet object c, province object a and province object c.\nMy goal is to have that object a craves object c and object b craves object a. \nMy plan is as follows:\n\n[PLAN]\nfeast object a from object b\novercome object b from object a\novercome object a from object c\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid. The following action at step 2 has unmet preconditions:\novercome object b from object a\nThe unmet preconditions are:\npain object b and province object a\n[STATEMENT]\nAs initial conditions I have that, object c craves object a, harmony, planet object a, planet object b, province object b and province object c.\nMy goal is to have that object a craves object c and object b craves object a. \nMy plan is as follows:\n\n[PLAN]\nattack object a\nsuccumb object c\nattack object b\novercome object b from object a\nfeast object c from object a\n[PLAN END]\n\n[VERIFICATION]",
            "ground_truth_plan": "The above plan is invalid.The following action at step 1 has an unmet precondition:\nattack object a\nThe unmet precondition is:\nprovince object a",
            "llm_raw_response": "The above plan is valid.",
            "extracted_llm_plan": {
                "valid": true
            },
            "parsed_ground_truth_plan": {
                "valid": false,
                "unmet_precondition": {
                    "action": "(attack object a)\n",
                    "predicate": [
                        "province_a"
                    ]
                }
            },
            "llm_correct_binary": false,
            "llm_correct_w_type": false,
            "llm_correct_w_expl": false
        },
        {
            "instance_id": 82,
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Pain object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object c craves object a, harmony, planet object a, planet object b, province object b and province object c.\nMy goal is to have that object a craves object b and object b craves object c. \nMy plan is as follows:\n\n[PLAN]\nfeast object c from object a\nsuccumb object c\nattack object b\novercome object b from object c\nattack object a\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid. This is the unmet goal condition:\nobject a craves object b\n[STATEMENT]\nAs initial conditions I have that, object b craves object a, object c craves object b, harmony, planet object a and province object c.\nMy goal is to have that object a craves object c and object c craves object b. \nMy plan is as follows:\n\n[PLAN]\nfeast object c from object b\nsuccumb object c\nfeast object b from object a\nsuccumb object b\nattack object c\novercome object c from object b\nattack object a\novercome object a from object c\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is valid.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, harmony, planet object b, planet object c, province object a and province object c.\nMy goal is to have that object a craves object c and object c craves object b. \nMy plan is as follows:\n\n[PLAN]\novercome object a from object c\nfeast object a from object b\nattack object a\nattack object c\nsuccumb object a\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid.The following action at step 1 has an unmet precondition:\novercome object a from object c\nThe unmet precondition is:\npain object a\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, object c craves object a, harmony, planet object b and province object c.\nMy goal is to have that object b craves object c and object c craves object a. \nMy plan is as follows:\n\n[PLAN]\nfeast object c from object a\nsuccumb object c\nfeast object a from object b\nsuccumb object a\nattack object c\novercome object c from object a\nattack object b\novercome object b from object c\n[PLAN END]\n\n[VERIFICATION]",
            "ground_truth_plan": "The above plan is valid.\n",
            "llm_raw_response": "The above plan is valid.",
            "extracted_llm_plan": {
                "valid": true
            },
            "parsed_ground_truth_plan": {
                "valid": true
            },
            "llm_correct_binary": true,
            "llm_correct_w_type": true,
            "llm_correct_w_expl": true
        },
        {
            "instance_id": 83,
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Pain object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object c, object c craves object a, harmony, planet object a and province object b.\nMy goal is to have that object a craves object b. \nMy plan is as follows:\n\n[PLAN]\novercome object a from object b\nsuccumb object b\nsuccumb object c\nfeast object b from object c\nattack object a\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid.The following action at step 1 has an unmet precondition:\novercome object a from object b\nThe unmet precondition is:\npain object a\n[STATEMENT]\nAs initial conditions I have that, object b craves object a, harmony, planet object a, planet object c, province object b and province object c.\nMy goal is to have that object b craves object c and object c craves object a. \nMy plan is as follows:\n\n[PLAN]\nfeast object b from object a\nsuccumb object b\nattack object c\novercome object c from object a\nattack object b\novercome object b from object c\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is valid.\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object c, harmony, planet object a, planet object c, province object a and province object b.\nMy goal is to have that object b craves object a and object c craves object b. \nMy plan is as follows:\n\n[PLAN]\nfeast object b from object c\novercome object b from object a\nattack object c\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid. This is the unmet goal condition:\nobject c craves object b\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, harmony, planet object b, planet object c, province object a and province object b.\nMy goal is to have that object a craves object c and object b craves object a. \nMy plan is as follows:\n\n[PLAN]\nattack object b\novercome object b from object a\n[PLAN END]\n\n[VERIFICATION]",
            "ground_truth_plan": "The above plan is valid.\n",
            "llm_raw_response": "The above plan is valid.",
            "extracted_llm_plan": {
                "valid": true
            },
            "parsed_ground_truth_plan": {
                "valid": true
            },
            "llm_correct_binary": true,
            "llm_correct_w_type": true,
            "llm_correct_w_expl": true
        },
        {
            "instance_id": 84,
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Pain object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, harmony, planet object b, planet object c, province object a and province object b.\nMy goal is to have that object a craves object c and object c craves object b. \nMy plan is as follows:\n\n[PLAN]\nfeast object a from object c\nsuccumb object a\nattack object c\novercome object c from object b\nattack object a\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid. This is the unmet goal condition:\nobject a craves object c\n[STATEMENT]\nAs initial conditions I have that, harmony, planet object a, planet object b, planet object c, province object a, province object b and province object c.\nMy goal is to have that object b craves object a and object c craves object b. \nMy plan is as follows:\n\n[PLAN]\nattack object b\novercome object b from object a\nattack object c\novercome object c from object b\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is valid.\n\n[STATEMENT]\nAs initial conditions I have that, object c craves object a, harmony, planet object a, planet object b, province object b and province object c.\nMy goal is to have that object a craves object c. \nMy plan is as follows:\n\n[PLAN]\nfeast object c from object a\novercome object a from object c\nattack object a\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid. The following action at step 2 has unmet preconditions:\novercome object a from object c\nThe unmet preconditions are:\npain object a and province object c\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, harmony, planet object b, planet object c, province object a and province object c.\nMy goal is to have that object b craves object a. \nMy plan is as follows:\n\n[PLAN]\nfeast object a from object b\nsuccumb object a\nattack object b\novercome object b from object a\n[PLAN END]\n\n[VERIFICATION]",
            "ground_truth_plan": "The above plan is valid.\n",
            "llm_raw_response": "The above plan is valid.",
            "extracted_llm_plan": {
                "valid": true
            },
            "parsed_ground_truth_plan": {
                "valid": true
            },
            "llm_correct_binary": true,
            "llm_correct_w_type": true,
            "llm_correct_w_expl": true
        },
        {
            "instance_id": 85,
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Pain object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object c craves object a, harmony, planet object a, planet object b, province object b and province object c.\nMy goal is to have that object a craves object c. \nMy plan is as follows:\n\n[PLAN]\nfeast object c from object a\nsuccumb object c\nattack object a\novercome object a from object c\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is valid.\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object c, object c craves object a, harmony, planet object a and province object b.\nMy goal is to have that object a craves object b and object c craves object a. \nMy plan is as follows:\n\n[PLAN]\nsuccumb object b\nfeast object c from object a\nattack object c\nfeast object b from object c\novercome object a from object b\novercome object c from object a\nsuccumb object c\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid.The following action at step 1 has an unmet precondition:\nsuccumb object b\nThe unmet precondition is:\npain object b\n[STATEMENT]\nAs initial conditions I have that, harmony, planet object a, planet object b, planet object c, province object a, province object b and province object c.\nMy goal is to have that object a craves object b and object c craves object a. \nMy plan is as follows:\n\n[PLAN]\nattack object a\novercome object a from object b\nattack object c\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid. This is the unmet goal condition:\nobject c craves object a\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, object c craves object a, harmony, planet object b and province object c.\nMy goal is to have that object a craves object c. \nMy plan is as follows:\n\n[PLAN]\nfeast object c from object a\nsuccumb object c\nfeast object a from object b\novercome object a from object c\n[PLAN END]\n\n[VERIFICATION]",
            "ground_truth_plan": "The above plan is valid.\n",
            "llm_raw_response": "The above plan is valid.",
            "extracted_llm_plan": {
                "valid": true
            },
            "parsed_ground_truth_plan": {
                "valid": true
            },
            "llm_correct_binary": true,
            "llm_correct_w_type": true,
            "llm_correct_w_expl": true
        },
        {
            "instance_id": 86,
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Pain object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, harmony, planet object a, planet object b, planet object c, province object a, province object b and province object c.\nMy goal is to have that object b craves object c. \nMy plan is as follows:\n\n[PLAN]\nattack object b\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid. This is the unmet goal condition:\nobject b craves object c\n[STATEMENT]\nAs initial conditions I have that, object b craves object a, harmony, planet object a, planet object c, province object b and province object c.\nMy goal is to have that object b craves object a and object c craves object b. \nMy plan is as follows:\n\n[PLAN]\nattack object c\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid. This is the unmet goal condition:\nobject c craves object b\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, object b craves object a, harmony, planet object c and province object b.\nMy goal is to have that object c craves object a. \nMy plan is as follows:\n\n[PLAN]\nfeast object b from object a\nsuccumb object b\nfeast object a from object c\nsuccumb object a\nattack object c\novercome object c from object a\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is valid.\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object a, harmony, planet object a, planet object c, province object b and province object c.\nMy goal is to have that object c craves object b. \nMy plan is as follows:\n\n[PLAN]\nattack object c\n[PLAN END]\n\n[VERIFICATION]",
            "ground_truth_plan": "The above plan is invalid. This is the unmet goal condition:\nobject c craves object b",
            "llm_raw_response": "The above plan is invalid. This is the unmet goal condition:\nobject c craves object b",
            "extracted_llm_plan": {
                "valid": false,
                "unmet_goal": [
                    "craves_b"
                ]
            },
            "parsed_ground_truth_plan": {
                "valid": false,
                "unmet_goal": [
                    "craves_b"
                ]
            },
            "llm_correct_binary": true,
            "llm_correct_w_type": true,
            "llm_correct_w_expl": true
        },
        {
            "instance_id": 87,
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Pain object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, harmony, planet object a, planet object b, planet object c, province object a, province object b and province object c.\nMy goal is to have that object a craves object b and object b craves object c. \nMy plan is as follows:\n\n[PLAN]\nattack object b\novercome object b from object c\nattack object a\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid. This is the unmet goal condition:\nobject a craves object b\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, object b craves object a, harmony, planet object c and province object b.\nMy goal is to have that object a craves object b and object c craves object a. \nMy plan is as follows:\n\n[PLAN]\novercome object c from object a\novercome object a from object b\nattack object c\nfeast object b from object a\nfeast object a from object c\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid. The following action at step 1 has unmet preconditions:\novercome object c from object a\nThe unmet preconditions are:\npain object c and province object a\n[STATEMENT]\nAs initial conditions I have that, object c craves object a, harmony, planet object a, planet object b, province object b and province object c.\nMy goal is to have that object c craves object b. \nMy plan is as follows:\n\n[PLAN]\nfeast object c from object a\novercome object c from object b\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is valid.\n\n[STATEMENT]\nAs initial conditions I have that, harmony, planet object a, planet object b, planet object c, province object a, province object b and province object c.\nMy goal is to have that object b craves object a and object c craves object b. \nMy plan is as follows:\n\n[PLAN]\nattack object b\novercome object b from object a\nattack object c\n[PLAN END]\n\n[VERIFICATION]",
            "ground_truth_plan": "The above plan is invalid. This is the unmet goal condition:\nobject c craves object b",
            "llm_raw_response": "The above plan is invalid. This is the unmet goal condition:\nobject c craves object b",
            "extracted_llm_plan": {
                "valid": false,
                "unmet_goal": [
                    "craves_b"
                ]
            },
            "parsed_ground_truth_plan": {
                "valid": false,
                "unmet_goal": [
                    "craves_b"
                ]
            },
            "llm_correct_binary": true,
            "llm_correct_w_type": true,
            "llm_correct_w_expl": true
        },
        {
            "instance_id": 88,
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Pain object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object c craves object b, harmony, planet object a, planet object b, province object a and province object c.\nMy goal is to have that object b craves object a and object c craves object b. \nMy plan is as follows:\n\n[PLAN]\nfeast object c from object b\nsuccumb object c\nattack object b\novercome object b from object a\nattack object c\novercome object c from object b\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is valid.\n\n[STATEMENT]\nAs initial conditions I have that, harmony, planet object a, planet object b, planet object c, province object a, province object b and province object c.\nMy goal is to have that object a craves object c. \nMy plan is as follows:\n\n[PLAN]\nattack object a\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid. This is the unmet goal condition:\nobject a craves object c\n[STATEMENT]\nAs initial conditions I have that, object b craves object a, harmony, planet object a, planet object c, province object b and province object c.\nMy goal is to have that object b craves object a and object c craves object b. \nMy plan is as follows:\n\n[PLAN]\nattack object c\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid. This is the unmet goal condition:\nobject c craves object b\n[STATEMENT]\nAs initial conditions I have that, object c craves object b, harmony, planet object a, planet object b, province object a and province object c.\nMy goal is to have that object a craves object b and object c craves object a. \nMy plan is as follows:\n\n[PLAN]\nfeast object c from object b\nsuccumb object c\nattack object a\novercome object a from object b\nattack object c\n[PLAN END]\n\n[VERIFICATION]",
            "ground_truth_plan": "The above plan is invalid. This is the unmet goal condition:\nobject c craves object a",
            "llm_raw_response": "The above plan is invalid. This is the unmet goal condition:\nobject a craves object b",
            "extracted_llm_plan": {
                "valid": false,
                "unmet_goal": [
                    "craves_a"
                ]
            },
            "parsed_ground_truth_plan": {
                "valid": false,
                "unmet_goal": [
                    "craves_a"
                ]
            },
            "llm_correct_binary": true,
            "llm_correct_w_type": true,
            "llm_correct_w_expl": true
        },
        {
            "instance_id": 89,
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Pain object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, harmony, planet object b, planet object c, province object a and province object c.\nMy goal is to have that object b craves object c. \nMy plan is as follows:\n\n[PLAN]\nfeast object a from object b\nsuccumb object a\nattack object b\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid. This is the unmet goal condition:\nobject b craves object c\n[STATEMENT]\nAs initial conditions I have that, object b craves object a, harmony, planet object a, planet object c, province object b and province object c.\nMy goal is to have that object a craves object c and object c craves object b. \nMy plan is as follows:\n\n[PLAN]\nattack object a\nsuccumb object b\novercome object a from object c\nattack object c\nfeast object b from object a\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid.The following action at step 1 has an unmet precondition:\nattack object a\nThe unmet precondition is:\nprovince object a\n[STATEMENT]\nAs initial conditions I have that, object b craves object a, object c craves object b, harmony, planet object a and province object c.\nMy goal is to have that object a craves object c and object c craves object b. \nMy plan is as follows:\n\n[PLAN]\nfeast object c from object b\nsuccumb object c\nfeast object b from object a\nsuccumb object b\nattack object c\novercome object c from object b\nattack object a\novercome object a from object c\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is valid.\n\n[STATEMENT]\nAs initial conditions I have that, harmony, planet object a, planet object b, planet object c, province object a, province object b and province object c.\nMy goal is to have that object b craves object a. \nMy plan is as follows:\n\n[PLAN]\nattack object b\n[PLAN END]\n\n[VERIFICATION]",
            "ground_truth_plan": "The above plan is invalid. This is the unmet goal condition:\nobject b craves object a",
            "llm_raw_response": "The above plan is invalid. The following action at step 1 has unmet preconditions:\nattack object b\nThe unmet preconditions are:\nProvince object b\nPlanet object b",
            "extracted_llm_plan": {
                "valid": false,
                "unmet_precondition": {
                    "action": "(attack object b)\n",
                    "predicate": []
                }
            },
            "parsed_ground_truth_plan": {
                "valid": false,
                "unmet_goal": [
                    "craves_a"
                ]
            },
            "llm_correct_binary": true,
            "llm_correct_w_type": false,
            "llm_correct_w_expl": false
        },
        {
            "instance_id": 90,
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Pain object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, harmony, planet object b, planet object c, province object a and province object b.\nMy goal is to have that object c craves object a. \nMy plan is as follows:\n\n[PLAN]\nfeast object a from object c\nsuccumb object a\nattack object c\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid. This is the unmet goal condition:\nobject c craves object a\n[STATEMENT]\nAs initial conditions I have that, object b craves object a, harmony, planet object a, planet object c, province object b and province object c.\nMy goal is to have that object b craves object c and object c craves object a. \nMy plan is as follows:\n\n[PLAN]\novercome object b from object c\nsuccumb object b\nfeast object b from object a\nattack object c\novercome object c from object a\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid.The following action at step 1 has an unmet precondition:\novercome object b from object c\nThe unmet precondition is:\npain object b\n[STATEMENT]\nAs initial conditions I have that, harmony, planet object a, planet object b, planet object c, province object a, province object b and province object c.\nMy goal is to have that object a craves object c. \nMy plan is as follows:\n\n[PLAN]\nattack object a\novercome object a from object c\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is valid.\n\n[STATEMENT]\nAs initial conditions I have that, harmony, planet object a, planet object b, planet object c, province object a, province object b and province object c.\nMy goal is to have that object b craves object c and object c craves object a. \nMy plan is as follows:\n\n[PLAN]\nattack object c\novercome object c from object a\nattack object b\n[PLAN END]\n\n[VERIFICATION]",
            "ground_truth_plan": "The above plan is invalid. This is the unmet goal condition:\nobject b craves object c",
            "llm_raw_response": "The above plan is invalid. The following action at step 3 has an unmet precondition:\nattack object b\nThe unmet precondition is:\nharmony",
            "extracted_llm_plan": {
                "valid": false,
                "unmet_precondition": {
                    "action": "(attack object b)\n",
                    "predicate": [
                        "harmony_"
                    ]
                }
            },
            "parsed_ground_truth_plan": {
                "valid": false,
                "unmet_goal": [
                    "craves_b"
                ]
            },
            "llm_correct_binary": true,
            "llm_correct_w_type": false,
            "llm_correct_w_expl": false
        },
        {
            "instance_id": 91,
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Pain object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, object b craves object c, harmony, planet object c and province object a.\nMy goal is to have that object b craves object c and object c craves object a. \nMy plan is as follows:\n\n[PLAN]\nfeast object a from object b\nsuccumb object a\nfeast object b from object c\nsuccumb object b\nattack object c\novercome object c from object a\nattack object b\novercome object b from object c\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is valid.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, harmony, planet object b, planet object c, province object a and province object b.\nMy goal is to have that object a craves object b and object b craves object c. \nMy plan is as follows:\n\n[PLAN]\nattack object a\novercome object b from object c\nfeast object a from object c\nattack object b\novercome object a from object b\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid.The following action at step 1 has an unmet precondition:\nattack object a\nThe unmet precondition is:\nplanet object a\n[STATEMENT]\nAs initial conditions I have that, object b craves object a, object c craves object b, harmony, planet object a and province object c.\nMy goal is to have that object a craves object c and object b craves object a. \nMy plan is as follows:\n\n[PLAN]\nfeast object c from object b\nsuccumb object c\nfeast object b from object a\nsuccumb object b\nattack object a\novercome object a from object c\nattack object b\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid. This is the unmet goal condition:\nobject b craves object a\n[STATEMENT]\nAs initial conditions I have that, object b craves object c, harmony, planet object a, planet object c, province object a and province object b.\nMy goal is to have that object c craves object a. \nMy plan is as follows:\n\n[PLAN]\nsuccumb object b\novercome object c from object a\nfeast object b from object c\n[PLAN END]\n\n[VERIFICATION]",
            "ground_truth_plan": "The above plan is invalid.The following action at step 1 has an unmet precondition:\nsuccumb object b\nThe unmet precondition is:\npain object b",
            "llm_raw_response": "The above plan is invalid. The following action at step 1 has an unmet precondition:\nsuccumb object b\nThe unmet precondition is:\nPain object",
            "extracted_llm_plan": {
                "valid": false,
                "unmet_precondition": {
                    "action": "(succumb object b)\n",
                    "predicate": []
                }
            },
            "parsed_ground_truth_plan": {
                "valid": false,
                "unmet_precondition": {
                    "action": "(succumb object b)\n",
                    "predicate": [
                        "pain_b"
                    ]
                }
            },
            "llm_correct_binary": true,
            "llm_correct_w_type": true,
            "llm_correct_w_expl": false
        },
        {
            "instance_id": 92,
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Pain object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, harmony, planet object a, planet object b, planet object c, province object a, province object b and province object c.\nMy goal is to have that object c craves object a. \nMy plan is as follows:\n\n[PLAN]\nattack object c\novercome object c from object a\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is valid.\n\n[STATEMENT]\nAs initial conditions I have that, object c craves object a, harmony, planet object a, planet object b, province object b and province object c.\nMy goal is to have that object a craves object c. \nMy plan is as follows:\n\n[PLAN]\nfeast object c from object a\nsuccumb object c\nattack object a\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid. This is the unmet goal condition:\nobject a craves object c\n[STATEMENT]\nAs initial conditions I have that, object b craves object c, object c craves object a, harmony, planet object a and province object b.\nMy goal is to have that object a craves object c. \nMy plan is as follows:\n\n[PLAN]\nfeast object b from object c\nattack object a\nsuccumb object b\novercome object a from object c\nfeast object c from object a\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid. The following action at step 2 has unmet preconditions:\nattack object a\nThe unmet preconditions are:\nharmony and province object a\n[STATEMENT]\nAs initial conditions I have that, object b craves object c, harmony, planet object a, planet object c, province object a and province object b.\nMy goal is to have that object b craves object a. \nMy plan is as follows:\n\n[PLAN]\nfeast object b from object c\n[PLAN END]\n\n[VERIFICATION]",
            "ground_truth_plan": "The above plan is invalid. This is the unmet goal condition:\nobject b craves object a",
            "llm_raw_response": "The above plan is invalid. This is the unmet goal condition:\nobject b craves object a",
            "extracted_llm_plan": {
                "valid": false,
                "unmet_goal": [
                    "craves_a"
                ]
            },
            "parsed_ground_truth_plan": {
                "valid": false,
                "unmet_goal": [
                    "craves_a"
                ]
            },
            "llm_correct_binary": true,
            "llm_correct_w_type": true,
            "llm_correct_w_expl": true
        },
        {
            "instance_id": 93,
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Pain object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, harmony, planet object a, planet object b, planet object c, province object a, province object b and province object c.\nMy goal is to have that object a craves object c and object b craves object a. \nMy plan is as follows:\n\n[PLAN]\nattack object a\novercome object a from object c\nattack object b\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid. This is the unmet goal condition:\nobject b craves object a\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, object b craves object a, harmony, planet object c and province object b.\nMy goal is to have that object a craves object b and object c craves object a. \nMy plan is as follows:\n\n[PLAN]\novercome object a from object b\nfeast object b from object a\nsuccumb object b\nfeast object a from object c\novercome object c from object a\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid.The following action at step 1 has an unmet precondition:\novercome object a from object b\nThe unmet precondition is:\npain object a\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, harmony, planet object b, planet object c, province object a and province object b.\nMy goal is to have that object a craves object b. \nMy plan is as follows:\n\n[PLAN]\nfeast object a from object c\novercome object a from object b\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is valid.\n\n[STATEMENT]\nAs initial conditions I have that, harmony, planet object a, planet object b, planet object c, province object a, province object b and province object c.\nMy goal is to have that object c craves object a. \nMy plan is as follows:\n\n[PLAN]\nattack object c\n[PLAN END]\n\n[VERIFICATION]",
            "ground_truth_plan": "The above plan is invalid. This is the unmet goal condition:\nobject c craves object a",
            "llm_raw_response": "The above plan is invalid. This is the unmet goal condition:\nobject c craves object a",
            "extracted_llm_plan": {
                "valid": false,
                "unmet_goal": [
                    "craves_a"
                ]
            },
            "parsed_ground_truth_plan": {
                "valid": false,
                "unmet_goal": [
                    "craves_a"
                ]
            },
            "llm_correct_binary": true,
            "llm_correct_w_type": true,
            "llm_correct_w_expl": true
        },
        {
            "instance_id": 94,
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Pain object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, harmony, planet object b, planet object c, province object a and province object c.\nMy goal is to have that object c craves object a. \nMy plan is as follows:\n\n[PLAN]\nattack object c\novercome object c from object a\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is valid.\n\n[STATEMENT]\nAs initial conditions I have that, object c craves object b, harmony, planet object a, planet object b, province object a and province object c.\nMy goal is to have that object a craves object b and object c craves object a. \nMy plan is as follows:\n\n[PLAN]\novercome object c from object a\nsuccumb object c\nfeast object c from object b\nattack object c\novercome object a from object b\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid.The following action at step 1 has an unmet precondition:\novercome object c from object a\nThe unmet precondition is:\npain object c\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, harmony, planet object b, planet object c, province object a and province object b.\nMy goal is to have that object a craves object b. \nMy plan is as follows:\n\n[PLAN]\nfeast object a from object c\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid. This is the unmet goal condition:\nobject a craves object b\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, harmony, planet object b, planet object c, province object a and province object c.\nMy goal is to have that object b craves object c and object c craves object a. \nMy plan is as follows:\n\n[PLAN]\nsuccumb object a\novercome object b from object c\nattack object b\nattack object c\nfeast object a from object b\n[PLAN END]\n\n[VERIFICATION]",
            "ground_truth_plan": "The above plan is invalid.The following action at step 1 has an unmet precondition:\nsuccumb object a\nThe unmet precondition is:\npain object a",
            "llm_raw_response": "The above plan is invalid. The following action at step 1 has an unmet precondition:\nsuccumb object a\nThe unmet precondition is:\npain object a",
            "extracted_llm_plan": {
                "valid": false,
                "unmet_precondition": {
                    "action": "(succumb object a)\n",
                    "predicate": [
                        "pain_a"
                    ]
                }
            },
            "parsed_ground_truth_plan": {
                "valid": false,
                "unmet_precondition": {
                    "action": "(succumb object a)\n",
                    "predicate": [
                        "pain_a"
                    ]
                }
            },
            "llm_correct_binary": true,
            "llm_correct_w_type": true,
            "llm_correct_w_expl": true
        },
        {
            "instance_id": 95,
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Pain object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object a, object c craves object b, harmony, planet object a and province object c.\nMy goal is to have that object c craves object a. \nMy plan is as follows:\n\n[PLAN]\nsuccumb object b\nattack object c\novercome object c from object a\nfeast object c from object b\nfeast object b from object a\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid.The following action at step 1 has an unmet precondition:\nsuccumb object b\nThe unmet precondition is:\npain object b\n[STATEMENT]\nAs initial conditions I have that, object b craves object a, harmony, planet object a, planet object c, province object b and province object c.\nMy goal is to have that object a craves object c and object b craves object a. \nMy plan is as follows:\n\n[PLAN]\nfeast object b from object a\nsuccumb object b\nattack object a\novercome object a from object c\nattack object b\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid. This is the unmet goal condition:\nobject b craves object a\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, object c craves object b, harmony, planet object b and province object a.\nMy goal is to have that object c craves object a. \nMy plan is as follows:\n\n[PLAN]\nfeast object a from object c\nsuccumb object a\nfeast object c from object b\novercome object c from object a\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is valid.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, object c craves object b, harmony, planet object b and province object a.\nMy goal is to have that object a craves object b and object b craves object c. \nMy plan is as follows:\n\n[PLAN]\nfeast object a from object c\nsuccumb object a\nfeast object c from object b\nsuccumb object c\nattack object b\novercome object b from object c\nattack object a\n[PLAN END]\n\n[VERIFICATION]",
            "ground_truth_plan": "The above plan is invalid. This is the unmet goal condition:\nobject a craves object b",
            "llm_raw_response": "The above plan is valid.",
            "extracted_llm_plan": {
                "valid": true
            },
            "parsed_ground_truth_plan": {
                "valid": false,
                "unmet_goal": [
                    "craves_a"
                ]
            },
            "llm_correct_binary": false,
            "llm_correct_w_type": false,
            "llm_correct_w_expl": false
        },
        {
            "instance_id": 96,
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Pain object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, object b craves object a, harmony, planet object c and province object b.\nMy goal is to have that object a craves object b and object c craves object a. \nMy plan is as follows:\n\n[PLAN]\nfeast object a from object c\nfeast object b from object a\nsuccumb object b\novercome object a from object b\novercome object c from object a\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid.The following action at step 1 has an unmet precondition:\nfeast object a from object c\nThe unmet precondition is:\nprovince object a\n[STATEMENT]\nAs initial conditions I have that, object b craves object c, harmony, planet object a, planet object c, province object a and province object b.\nMy goal is to have that object a craves object b and object c craves object a. \nMy plan is as follows:\n\n[PLAN]\nfeast object b from object c\nsuccumb object b\nattack object a\novercome object a from object b\nattack object c\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid. This is the unmet goal condition:\nobject c craves object a\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, object b craves object a, harmony, planet object c and province object b.\nMy goal is to have that object a craves object b and object c craves object a. \nMy plan is as follows:\n\n[PLAN]\nfeast object b from object a\nsuccumb object b\nfeast object a from object c\novercome object a from object b\nattack object c\novercome object c from object a\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is valid.\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object a, harmony, planet object a, planet object c, province object b and province object c.\nMy goal is to have that object b craves object c. \nMy plan is as follows:\n\n[PLAN]\nfeast object b from object a\novercome object b from object c\n[PLAN END]\n\n[VERIFICATION]",
            "ground_truth_plan": "The above plan is valid.\n",
            "llm_raw_response": "The above plan is invalid. The following action at step 2 has an unmet precondition:\novercome object b from object c\nThe unmet precondition is:\nPain object",
            "extracted_llm_plan": {
                "valid": false,
                "unmet_precondition": {
                    "action": "(overcome object b object c)\n",
                    "predicate": []
                }
            },
            "parsed_ground_truth_plan": {
                "valid": true
            },
            "llm_correct_binary": false,
            "llm_correct_w_type": false,
            "llm_correct_w_expl": false
        },
        {
            "instance_id": 97,
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Pain object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object a, harmony, planet object a, planet object c, province object b and province object c.\nMy goal is to have that object b craves object c and object c craves object a. \nMy plan is as follows:\n\n[PLAN]\nsuccumb object b\nattack object c\novercome object b from object c\novercome object c from object a\nfeast object b from object a\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid.The following action at step 1 has an unmet precondition:\nsuccumb object b\nThe unmet precondition is:\npain object b\n[STATEMENT]\nAs initial conditions I have that, object b craves object a, harmony, planet object a, planet object c, province object b and province object c.\nMy goal is to have that object b craves object c. \nMy plan is as follows:\n\n[PLAN]\nfeast object b from object a\novercome object b from object c\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is valid.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, harmony, planet object b, planet object c, province object a and province object c.\nMy goal is to have that object a craves object c and object b craves object a. \nMy plan is as follows:\n\n[PLAN]\nfeast object a from object b\novercome object a from object c\nattack object b\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid. This is the unmet goal condition:\nobject b craves object a\n[STATEMENT]\nAs initial conditions I have that, object b craves object a, object c craves object b, harmony, planet object a and province object c.\nMy goal is to have that object c craves object a. \nMy plan is as follows:\n\n[PLAN]\nfeast object c from object b\nsuccumb object c\nfeast object b from object a\nsuccumb object b\nattack object c\n[PLAN END]\n\n[VERIFICATION]",
            "ground_truth_plan": "The above plan is invalid. This is the unmet goal condition:\nobject c craves object a",
            "llm_raw_response": "The above plan is invalid. The following action at step 2 has an unmet precondition:\nsuccumb object c\nThe unmet precondition is:\npain object c",
            "extracted_llm_plan": {
                "valid": false,
                "unmet_precondition": {
                    "action": "(succumb object c)\n",
                    "predicate": [
                        "pain_c"
                    ]
                }
            },
            "parsed_ground_truth_plan": {
                "valid": false,
                "unmet_goal": [
                    "craves_a"
                ]
            },
            "llm_correct_binary": true,
            "llm_correct_w_type": false,
            "llm_correct_w_expl": false
        },
        {
            "instance_id": 98,
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Pain object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, object b craves object a, harmony, planet object c and province object b.\nMy goal is to have that object a craves object b and object c craves object a. \nMy plan is as follows:\n\n[PLAN]\novercome object a from object b\novercome object c from object a\nattack object c\nfeast object a from object c\nfeast object b from object a\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid.The following action at step 1 has an unmet precondition:\novercome object a from object b\nThe unmet precondition is:\npain object a\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, harmony, planet object b, planet object c, province object a and province object b.\nMy goal is to have that object b craves object c. \nMy plan is as follows:\n\n[PLAN]\nfeast object a from object c\nsuccumb object a\nattack object b\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid. This is the unmet goal condition:\nobject b craves object c\n[STATEMENT]\nAs initial conditions I have that, object c craves object a, harmony, planet object a, planet object b, province object b and province object c.\nMy goal is to have that object a craves object c. \nMy plan is as follows:\n\n[PLAN]\nfeast object c from object a\nsuccumb object c\nattack object a\novercome object a from object c\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is valid.\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object a, object c craves object b, harmony, planet object a and province object c.\nMy goal is to have that object a craves object b. \nMy plan is as follows:\n\n[PLAN]\nattack object a\novercome object a from object b\nfeast object b from object a\nsuccumb object b\nfeast object c from object b\n[PLAN END]\n\n[VERIFICATION]",
            "ground_truth_plan": "The above plan is invalid.The following action at step 1 has an unmet precondition:\nattack object a\nThe unmet precondition is:\nprovince object a",
            "llm_raw_response": "The above plan is invalid. This is the unmet goal condition:\nobject a craves object b",
            "extracted_llm_plan": {
                "valid": false,
                "unmet_goal": [
                    "craves_a"
                ]
            },
            "parsed_ground_truth_plan": {
                "valid": false,
                "unmet_precondition": {
                    "action": "(attack object a)\n",
                    "predicate": [
                        "province_a"
                    ]
                }
            },
            "llm_correct_binary": true,
            "llm_correct_w_type": false,
            "llm_correct_w_expl": false
        },
        {
            "instance_id": 99,
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Pain object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, harmony, planet object b, planet object c, province object a and province object b.\nMy goal is to have that object b craves object c. \nMy plan is as follows:\n\n[PLAN]\nfeast object a from object c\nsuccumb object a\nattack object b\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid. This is the unmet goal condition:\nobject b craves object c\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, object c craves object b, harmony, planet object b and province object a.\nMy goal is to have that object c craves object a. \nMy plan is as follows:\n\n[PLAN]\novercome object c from object a\nfeast object c from object b\nfeast object a from object c\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid.The following action at step 1 has an unmet precondition:\novercome object c from object a\nThe unmet precondition is:\npain object c\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, object b craves object c, harmony, planet object c and province object a.\nMy goal is to have that object a craves object c and object b craves object a. \nMy plan is as follows:\n\n[PLAN]\nfeast object a from object b\nsuccumb object a\nfeast object b from object c\nsuccumb object b\nattack object a\novercome object a from object c\nattack object b\novercome object b from object a\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is valid.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, object c craves object a, harmony, planet object b and province object c.\nMy goal is to have that object a craves object c and object c craves object b. \nMy plan is as follows:\n\n[PLAN]\nfeast object a from object b\novercome object a from object c\nsuccumb object c\novercome object c from object b\nsuccumb object a\nattack object c\nfeast object c from object a\n[PLAN END]\n\n[VERIFICATION]",
            "ground_truth_plan": "The above plan is invalid.The following action at step 1 has an unmet precondition:\nfeast object a from object b\nThe unmet precondition is:\nprovince object a",
            "llm_raw_response": "The above plan is valid.",
            "extracted_llm_plan": {
                "valid": true
            },
            "parsed_ground_truth_plan": {
                "valid": false,
                "unmet_precondition": {
                    "action": "(feast object a object b)\n",
                    "predicate": [
                        "province_a"
                    ]
                }
            },
            "llm_correct_binary": false,
            "llm_correct_w_type": false,
            "llm_correct_w_expl": false
        },
        {
            "instance_id": 100,
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Pain object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, object c craves object a, harmony, planet object b and province object c.\nMy goal is to have that object a craves object c and object c craves object b. \nMy plan is as follows:\n\n[PLAN]\nfeast object c from object a\nsuccumb object c\nfeast object a from object b\nsuccumb object a\nattack object c\novercome object c from object b\nattack object a\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid. This is the unmet goal condition:\nobject a craves object c\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, object b craves object a, harmony, planet object c and province object b.\nMy goal is to have that object a craves object b and object c craves object a. \nMy plan is as follows:\n\n[PLAN]\nfeast object b from object a\nsuccumb object b\nfeast object a from object c\novercome object a from object b\nattack object c\novercome object c from object a\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is valid.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, object c craves object a, harmony, planet object b and province object c.\nMy goal is to have that object a craves object c. \nMy plan is as follows:\n\n[PLAN]\nfeast object c from object a\nsuccumb object c\novercome object a from object c\n[PLAN END]\n\n[VERIFICATION]\nThe above plan is invalid.The following action at step 3 has an unmet precondition:\novercome object a from object c\nThe unmet precondition is:\npain object a\n[STATEMENT]\nAs initial conditions I have that, object c craves object a, harmony, planet object a, planet object b, province object b and province object c.\nMy goal is to have that object b craves object c and object c craves object a. \nMy plan is as follows:\n\n[PLAN]\nattack object b\n[PLAN END]\n\n[VERIFICATION]",
            "ground_truth_plan": "The above plan is invalid. This is the unmet goal condition:\nobject b craves object c",
            "llm_raw_response": "The above plan is invalid. This is the unmet goal condition:\nobject b craves object c",
            "extracted_llm_plan": {
                "valid": false,
                "unmet_goal": [
                    "craves_b"
                ]
            },
            "parsed_ground_truth_plan": {
                "valid": false,
                "unmet_goal": [
                    "craves_b"
                ]
            },
            "llm_correct_binary": true,
            "llm_correct_w_type": true,
            "llm_correct_w_expl": true
        }
    ],
    "engine": "gpt-4_chat"
}